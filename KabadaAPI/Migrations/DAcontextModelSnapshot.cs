// <auto-generated />
using System;
using KabadaAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KabadaAPI.Migrations
{
    [DbContext(typeof(DAcontext))]
    partial class DAcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Completed")
                        .HasColumnType("int");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("Img")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPartnersCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResourcesCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSwotCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("BusinessPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29806c4b-d85f-4e06-8a49-972ff0de14d5"),
                            ShortCode = "AT",
                            Title = "Austria"
                        },
                        new
                        {
                            Id = new Guid("4ae789fd-ebb1-4074-8fa8-704e96a85583"),
                            ShortCode = "BA",
                            Title = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = new Guid("a7a082e3-bdc6-4e40-9472-560b1c3780ad"),
                            ShortCode = "BE",
                            Title = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("793c8ade-8656-460c-bb65-ffc30a421cfd"),
                            ShortCode = "BG",
                            Title = "Bulgaria"
                        },
                        new
                        {
                            Id = new Guid("bde293c4-1a13-421b-9d54-8dc719f71064"),
                            ShortCode = "HR",
                            Title = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("9491f7f9-cf78-48cb-9dbc-4049ad5ccb89"),
                            ShortCode = "CY",
                            Title = "Cyprus"
                        },
                        new
                        {
                            Id = new Guid("d2ca55a7-4bf5-495f-bba9-f26908729d97"),
                            ShortCode = "CZ",
                            Title = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("485d0d4e-2ebc-425b-ab97-e6405b16a200"),
                            ShortCode = "DK",
                            Title = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("b58e8ea5-ee30-46fc-8415-ea85148a7047"),
                            ShortCode = "EE",
                            Title = "Estonia"
                        },
                        new
                        {
                            Id = new Guid("40062cdd-9235-47f3-9614-0661fa709e86"),
                            ShortCode = "FI",
                            Title = "Finland"
                        },
                        new
                        {
                            Id = new Guid("f94d6c77-407d-4249-9221-82789368e916"),
                            ShortCode = "FR",
                            Title = "France"
                        },
                        new
                        {
                            Id = new Guid("f19c804f-35d1-466c-b608-8f0fe2332050"),
                            ShortCode = "DE",
                            Title = "Germany"
                        },
                        new
                        {
                            Id = new Guid("fa746db5-c5e5-4597-835d-bc3a843f10a7"),
                            ShortCode = "EL",
                            Title = "Greece"
                        },
                        new
                        {
                            Id = new Guid("3a9b9553-ca89-4951-b77b-766b6b0d4374"),
                            ShortCode = "HU",
                            Title = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("25ae8878-213c-4275-867c-793d36ada33f"),
                            ShortCode = "IS",
                            Title = "Iceland"
                        },
                        new
                        {
                            Id = new Guid("e0adce69-addd-4389-b1a3-e06fb0bcb679"),
                            ShortCode = "IE",
                            Title = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("e3f3ca2f-8045-4b10-97e7-52cbe98367f3"),
                            ShortCode = "IT",
                            Title = "Italy"
                        },
                        new
                        {
                            Id = new Guid("6c14ed17-892a-4d92-8672-c723bc619ce7"),
                            ShortCode = "LV",
                            Title = "Latvia"
                        },
                        new
                        {
                            Id = new Guid("b794433d-413f-4c14-8c77-970497b8d817"),
                            ShortCode = "LI",
                            Title = "Liechtenstein"
                        },
                        new
                        {
                            Id = new Guid("8fcf6f85-10ba-441e-95ad-fcdcb7804d18"),
                            ShortCode = "LT",
                            Title = "Lithuania"
                        },
                        new
                        {
                            Id = new Guid("ab397403-d0da-43df-9c92-dfe80a649967"),
                            ShortCode = "LU",
                            Title = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("eb92910a-1bcb-4187-b507-236096fcb0dd"),
                            ShortCode = "MT",
                            Title = "Malta"
                        },
                        new
                        {
                            Id = new Guid("17fd8da6-e68e-4ca2-8476-f5c1dd3755a4"),
                            ShortCode = "NL",
                            Title = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("900b90e0-6e41-466f-b271-360d27c84aa9"),
                            ShortCode = "MK",
                            Title = "North Macedonia"
                        },
                        new
                        {
                            Id = new Guid("9f3f79cd-ec1a-494d-81ed-3cd200719c82"),
                            ShortCode = "NO",
                            Title = "Norway"
                        },
                        new
                        {
                            Id = new Guid("58f7e746-85ca-4aec-8b2e-39ec7e856dd5"),
                            ShortCode = "PL",
                            Title = "Poland"
                        },
                        new
                        {
                            Id = new Guid("43682bc1-0d02-4f9b-9068-8b8c6dd494d8"),
                            ShortCode = "PT",
                            Title = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("25a513ad-4718-4688-9ade-2e411905fad4"),
                            ShortCode = "RO",
                            Title = "Romania"
                        },
                        new
                        {
                            Id = new Guid("a4a2cc9f-656a-48cd-88f9-50e7a540f384"),
                            ShortCode = "RS",
                            Title = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("edf6dbfa-4995-4ce7-ab44-c5ae0df48154"),
                            ShortCode = "SK",
                            Title = "Slovakia"
                        },
                        new
                        {
                            Id = new Guid("11d89805-e111-4c16-adf4-c2b758fd39c1"),
                            ShortCode = "SI",
                            Title = "Slovenia"
                        },
                        new
                        {
                            Id = new Guid("1ab6ce2e-a51a-44dc-9cb8-f25f80db24a2"),
                            ShortCode = "ES",
                            Title = "Spain"
                        },
                        new
                        {
                            Id = new Guid("e8677a3a-c5eb-4f26-a084-3b0ddb5c1603"),
                            ShortCode = "SE",
                            Title = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("9fc1cfc7-6ae1-4602-adb9-049ad16e59f5"),
                            ShortCode = "CH",
                            Title = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("3d85e579-9181-4dee-b8e3-dbb5f3e1ba9c"),
                            ShortCode = "TR",
                            Title = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("a50ad36b-5c41-4c96-83db-f5044ede77d3"),
                            ShortCode = "UK",
                            Title = "United Kingdom"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TexterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.HasIndex("TexterId");

                    b.ToTable("Plan_Attributes");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.ToTable("SharedPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Texter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<string>("LongValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Texters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa0e4a99-1f1a-4b54-bedd-9bec0c1b5041"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)1,
                            Value = "Land"
                        },
                        new
                        {
                            Id = new Guid("5a521f07-d2bc-4490-887f-a82861d88edc"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)2,
                            Value = "Facilities and equipment"
                        },
                        new
                        {
                            Id = new Guid("89fc96e9-bd8b-4d44-94c7-6f5dfe7d7b70"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)3,
                            Value = "Vehicles"
                        },
                        new
                        {
                            Id = new Guid("b78c3603-fe20-492e-bf8b-780fc9f29743"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)4,
                            Value = "Inventory"
                        },
                        new
                        {
                            Id = new Guid("87f2e937-5c58-4694-9438-132549ba2c42"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)5,
                            Value = "Skills and experience of employees"
                        },
                        new
                        {
                            Id = new Guid("1718c5af-97e0-4efb-8c94-7a01af4280f8"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)6,
                            Value = "Corporate image"
                        },
                        new
                        {
                            Id = new Guid("e3e3f9d7-536e-44ab-ad52-2fa92087a75e"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)7,
                            Value = "Patents"
                        },
                        new
                        {
                            Id = new Guid("8a4797de-bd18-4be8-a915-7aa63d295709"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)8,
                            Value = "Trademarks"
                        },
                        new
                        {
                            Id = new Guid("b7f5aa0a-3969-4fb7-b5a3-efe609dbc739"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)9,
                            Value = "Copyrights"
                        },
                        new
                        {
                            Id = new Guid("c1e9b860-4449-4dc7-a2db-b5067f72ba0a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)10,
                            Value = "Operational processes"
                        },
                        new
                        {
                            Id = new Guid("7b85f3a7-8342-44cb-9607-2affeed260b1"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)11,
                            Value = "Management processes"
                        },
                        new
                        {
                            Id = new Guid("11b7aada-bbd9-472b-a74d-fcbc6f95ea58"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)12,
                            Value = "Supporting processes"
                        },
                        new
                        {
                            Id = new Guid("be441a81-83ae-4ecc-b236-8558ae0e4c82"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)13,
                            Value = "Product design"
                        },
                        new
                        {
                            Id = new Guid("97b6bda3-15c3-4824-9f1d-c743ecabac2e"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)14,
                            Value = "Product assortment"
                        },
                        new
                        {
                            Id = new Guid("0a6eec93-63fa-4488-acb2-1db6bd2e8197"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)15,
                            Value = "Packaging and labeling"
                        },
                        new
                        {
                            Id = new Guid("5b5fb932-6747-4e55-9aae-b7261532e42f"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)16,
                            Value = "Complementary and after-sales service"
                        },
                        new
                        {
                            Id = new Guid("e6d43157-6b17-4379-9f90-e9ab9fb30bce"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)17,
                            Value = "Guarantees and warranties"
                        },
                        new
                        {
                            Id = new Guid("dab0f45e-01d3-4c6e-b999-82631f27c1f9"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)18,
                            Value = "Return of goods"
                        },
                        new
                        {
                            Id = new Guid("199d34cc-04f3-4ef0-a205-18a92ef4f337"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)19,
                            Value = "Price"
                        },
                        new
                        {
                            Id = new Guid("513d529f-c751-43a6-adb1-99a3230b3bcb"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)20,
                            Value = "Discounts"
                        },
                        new
                        {
                            Id = new Guid("7526235c-1443-47c1-8e08-34d38cc8faf1"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)21,
                            Value = "Payment terms"
                        },
                        new
                        {
                            Id = new Guid("1913a85f-a83c-4e11-84ac-034acfef1335"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)22,
                            Value = "Customer convenient access to products"
                        },
                        new
                        {
                            Id = new Guid("7345490c-2e26-4201-9171-21c053fdb8f0"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)23,
                            Value = "Advertising, PR and sales promotion"
                        },
                        new
                        {
                            Id = new Guid("1b630500-61ad-441c-9612-730936b8f1a3"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Arrival of new technology"
                        },
                        new
                        {
                            Id = new Guid("08ff0984-c781-4e85-8a79-cde60782b27c"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New regulations"
                        },
                        new
                        {
                            Id = new Guid("6d0a32d8-86e9-4ab4-b09f-0445312550e4"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Unfulfilled customer need"
                        },
                        new
                        {
                            Id = new Guid("90cc8e16-b58b-45f4-bc9c-4c5ac0837baf"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Taking business courses (training)"
                        },
                        new
                        {
                            Id = new Guid("5a72cac5-dc05-4dec-b9a5-4253db9c697b"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Trend changes"
                        },
                        new
                        {
                            Id = new Guid("8116aeeb-bd23-40e0-9e3c-69364a1f8b0f"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New substitute products"
                        },
                        new
                        {
                            Id = new Guid("acf21675-8b93-48b9-b2f5-ed2359163b9f"),
                            Kind = (short)5,
                            LongValue = "Physical assets are tangible resources that a company uses to create its value proposition. These could include equipment, inventory, buildings, manufacturing plants and distribution networks that enable the business to function.",
                            OrderValue = (short)1,
                            Value = "Physical resources"
                        },
                        new
                        {
                            Id = new Guid("337bcfe6-d7f7-4049-927b-17dccf2a0223"),
                            Kind = (short)6,
                            MasterId = new Guid("acf21675-8b93-48b9-b2f5-ed2359163b9f"),
                            OrderValue = (short)1,
                            Value = "Buildings"
                        },
                        new
                        {
                            Id = new Guid("9204347d-ff82-4ed2-8c6d-6dfc91c3c0f7"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("337bcfe6-d7f7-4049-927b-17dccf2a0223"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("c7a958b2-94a9-486f-aea4-0018ced60706"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("337bcfe6-d7f7-4049-927b-17dccf2a0223"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("6419bc24-0fe8-4709-be7b-efc05dab6bc2"),
                            Kind = (short)6,
                            MasterId = new Guid("acf21675-8b93-48b9-b2f5-ed2359163b9f"),
                            OrderValue = (short)2,
                            Value = "Equipment"
                        },
                        new
                        {
                            Id = new Guid("73fc0c8d-89fd-49b8-8ec4-8825d50b3dee"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("6419bc24-0fe8-4709-be7b-efc05dab6bc2"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("7118eb1c-a9ad-4cac-8d74-bcd8b55c6dd4"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("6419bc24-0fe8-4709-be7b-efc05dab6bc2"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("ee211d86-4e49-458b-9730-8d4b7bae3ba5"),
                            Kind = (short)6,
                            MasterId = new Guid("acf21675-8b93-48b9-b2f5-ed2359163b9f"),
                            OrderValue = (short)3,
                            Value = "Transport"
                        },
                        new
                        {
                            Id = new Guid("f56a75ab-3d24-4378-a9f3-195db5a10415"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("ee211d86-4e49-458b-9730-8d4b7bae3ba5"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("b2d46133-1b0f-48e5-9d05-a22791049191"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("ee211d86-4e49-458b-9730-8d4b7bae3ba5"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("e5513499-a7e6-4c6c-bd88-fb6d00abd0f8"),
                            Kind = (short)6,
                            MasterId = new Guid("acf21675-8b93-48b9-b2f5-ed2359163b9f"),
                            OrderValue = (short)4,
                            Value = "Raw materials"
                        },
                        new
                        {
                            Id = new Guid("b5d76c6d-03cb-42d4-882c-5b51ed84f2e9"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("e5513499-a7e6-4c6c-bd88-fb6d00abd0f8"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("f7fa041e-350c-45a2-a639-2721d728d9c1"),
                            Kind = (short)6,
                            MasterId = new Guid("acf21675-8b93-48b9-b2f5-ed2359163b9f"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("690278b8-2d0a-4913-8200-43af5ea35475"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("f7fa041e-350c-45a2-a639-2721d728d9c1"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("b30d1712-41bc-49b0-90f3-1be698ee32da"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("f7fa041e-350c-45a2-a639-2721d728d9c1"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("4337ab6d-c76a-4b16-bf24-9c31a546eb5c"),
                            Kind = (short)5,
                            LongValue = "These are non-physical, intangible resources like brand, patents, IP, copyrights, and even partnerships. Customer lists, customer knowledge, and even your own people, represent a form of intellectual resource. Intellectual resources take a great deal of time and expenditure to develop. But once developed, they can offer unique advantages to the company.",
                            OrderValue = (short)2,
                            Value = "Intellectual resources"
                        },
                        new
                        {
                            Id = new Guid("a17f4c09-ac0e-4525-8315-b2b45f4525f8"),
                            Kind = (short)6,
                            MasterId = new Guid("4337ab6d-c76a-4b16-bf24-9c31a546eb5c"),
                            OrderValue = (short)1,
                            Value = "Brands"
                        },
                        new
                        {
                            Id = new Guid("0b77606d-09f9-4396-ac80-ea4e7159cff3"),
                            Kind = (short)6,
                            MasterId = new Guid("4337ab6d-c76a-4b16-bf24-9c31a546eb5c"),
                            OrderValue = (short)2,
                            Value = "Licenses"
                        },
                        new
                        {
                            Id = new Guid("d20445fd-edd6-45b3-9617-69d5dc410a38"),
                            Kind = (short)6,
                            MasterId = new Guid("4337ab6d-c76a-4b16-bf24-9c31a546eb5c"),
                            OrderValue = (short)3,
                            Value = "Software"
                        },
                        new
                        {
                            Id = new Guid("54d29d29-f32c-4fd7-9f84-248a8fac0441"),
                            Kind = (short)6,
                            MasterId = new Guid("4337ab6d-c76a-4b16-bf24-9c31a546eb5c"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("e9639458-9779-4c24-9cd4-1b593b92ccd9"),
                            Kind = (short)5,
                            LongValue = "Employees are often the most important and yet the most easily overlooked assets of an organization. Specifically for companies in the service industries or require a great deal of creativity and an extensive knowledge pool, human resources such as customer service representatives, software engineers or scientists are pivotal.",
                            OrderValue = (short)3,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("7bb79880-d79b-453d-9c0d-940b2705aa56"),
                            Kind = (short)6,
                            MasterId = new Guid("e9639458-9779-4c24-9cd4-1b593b92ccd9"),
                            OrderValue = (short)1,
                            Value = "Specialists & Know-how"
                        },
                        new
                        {
                            Id = new Guid("9a16c837-eafb-4eb6-ad51-94362acd2487"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false},{\"title\":\"Myself\",\"selected\":false}]",
                            MasterId = new Guid("7bb79880-d79b-453d-9c0d-940b2705aa56"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("718b21ac-f828-4c8a-967b-9b33b5d1fce4"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("7bb79880-d79b-453d-9c0d-940b2705aa56"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("722d42a6-511c-4dc9-bbdf-c94848f54444"),
                            Kind = (short)6,
                            MasterId = new Guid("e9639458-9779-4c24-9cd4-1b593b92ccd9"),
                            OrderValue = (short)2,
                            Value = "Administrative"
                        },
                        new
                        {
                            Id = new Guid("3d37c769-a806-4b7e-969c-c32ea6e88e62"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("722d42a6-511c-4dc9-bbdf-c94848f54444"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("63ab951d-5dfe-4330-8160-daebede1bedb"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("722d42a6-511c-4dc9-bbdf-c94848f54444"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("54d9a32d-994e-4e06-8b24-50a558bf0c34"),
                            Kind = (short)6,
                            MasterId = new Guid("e9639458-9779-4c24-9cd4-1b593b92ccd9"),
                            OrderValue = (short)3,
                            Value = "Employees directly involved in production or service"
                        },
                        new
                        {
                            Id = new Guid("02ce0e28-2f87-4406-b61c-079056156451"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("54d9a32d-994e-4e06-8b24-50a558bf0c34"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("add942d6-7fea-402d-9f12-c833680e9b6d"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("54d9a32d-994e-4e06-8b24-50a558bf0c34"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("fe3e7dac-bfbb-46f1-b074-ea41fa7ed8d6"),
                            Kind = (short)6,
                            MasterId = new Guid("e9639458-9779-4c24-9cd4-1b593b92ccd9"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("78f73dc2-e573-40e2-9e51-b436a827ad41"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("fe3e7dac-bfbb-46f1-b074-ea41fa7ed8d6"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("ab1d1762-e6e5-4b53-bcf9-271629638b80"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("fe3e7dac-bfbb-46f1-b074-ea41fa7ed8d6"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("320bc7e7-c21c-4329-bae3-f42e2ad10b06"),
                            Kind = (short)11,
                            LongValue = "Possible if you distribute your products through your own channels – directly, your own store, homepage. Often the case in some service sectors",
                            OrderValue = (short)1,
                            Value = "Self distribution"
                        },
                        new
                        {
                            Id = new Guid("62c0a2ae-d09b-49e2-bb75-6b3713cd1a68"),
                            Kind = (short)11,
                            LongValue = "You can choose «Many Distributors» if you believe that distribution channels are strongly diversified and no distributor is of high importance",
                            OrderValue = (short)2,
                            Value = "Highly diversified distributors"
                        },
                        new
                        {
                            Id = new Guid("fa16364c-977f-4409-b27a-9c5f5429642d"),
                            Kind = (short)11,
                            OrderValue = (short)3,
                            Value = "Retailers"
                        },
                        new
                        {
                            Id = new Guid("a24f62b9-9b39-46ab-9010-7b0a27357b86"),
                            Kind = (short)11,
                            OrderValue = (short)4,
                            Value = "Wholesalers"
                        },
                        new
                        {
                            Id = new Guid("e2c25987-1ed5-4835-93eb-ae71bc3157f5"),
                            Kind = (short)11,
                            OrderValue = (short)5,
                            Value = "Agents"
                        },
                        new
                        {
                            Id = new Guid("beb8488e-80b8-4ef8-a5b1-e3c88cdc27c5"),
                            Kind = (short)11,
                            OrderValue = (short)6,
                            Value = "Others"
                        },
                        new
                        {
                            Id = new Guid("66c213c9-ea86-433d-9be0-195dc00c5fbe"),
                            Kind = (short)12,
                            OrderValue = (short)1,
                            Value = "Raw materials, finished or semi-finished goods"
                        },
                        new
                        {
                            Id = new Guid("e6f85231-90ea-4b9d-b72c-48533b4f0e4a"),
                            Kind = (short)12,
                            OrderValue = (short)2,
                            Value = "Equipment and real estate"
                        },
                        new
                        {
                            Id = new Guid("9b450966-cdbf-40ee-be3f-03ee3ddfcbe2"),
                            Kind = (short)12,
                            OrderValue = (short)3,
                            Value = "Outsourced services"
                        },
                        new
                        {
                            Id = new Guid("c1563709-3630-4347-98b0-b1f63d74c3b7"),
                            Kind = (short)12,
                            OrderValue = (short)4,
                            Value = "Financiers"
                        },
                        new
                        {
                            Id = new Guid("32c16ddf-4eb1-4f85-a471-d8b101224633"),
                            Kind = (short)12,
                            OrderValue = (short)5,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("3da21b93-5391-4460-8886-f85a7d179036"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Associations"
                        },
                        new
                        {
                            Id = new Guid("ffcd6ea8-6aac-439d-95b9-76115e1873b1"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Government institutions"
                        },
                        new
                        {
                            Id = new Guid("2d156aca-4ae9-4668-958f-ede0fcb5e86d"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Non-governmental institutions"
                        },
                        new
                        {
                            Id = new Guid("b7241727-8a24-4cc2-95d6-fdfa34248c62"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Consultants"
                        },
                        new
                        {
                            Id = new Guid("f07bca18-1b81-4490-aca4-2fc235cf5078"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Other"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Facebook")
                        .HasColumnType("bit");

                    b.Property<bool>("Google")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiveNotification")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorAuthEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TwoFactorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TwoFactorStringExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserPhoto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KabadaAPIdao.UserFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("KabadaAPIdao.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Administrator"
                        },
                        new
                        {
                            Id = 100,
                            Title = "Simple"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.HasOne("KabadaAPIdao.Industry", "Industry")
                        .WithMany("Activities")
                        .HasForeignKey("IndustryId");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KabadaAPIdao.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KabadaAPIdao.Texter", "Texter")
                        .WithMany()
                        .HasForeignKey("TexterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");

                    b.Navigation("Texter");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.HasOne("KabadaAPIdao.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}

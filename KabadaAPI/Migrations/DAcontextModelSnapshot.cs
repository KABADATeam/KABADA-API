// <auto-generated />
using System;
using KabadaAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KabadaAPI.Migrations
{
    [DbContext(typeof(DAcontext))]
    partial class DAcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Completed")
                        .HasColumnType("int");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("Img")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPartnersCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResourcesCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSwotCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("BusinessPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e47a0f1f-e14a-4231-bfa9-e85484efd818"),
                            ShortCode = "AT",
                            Title = "Austria"
                        },
                        new
                        {
                            Id = new Guid("d55c6935-696b-49ad-82fa-98a94482473a"),
                            ShortCode = "BA",
                            Title = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = new Guid("3d3f7b59-3717-4111-8a50-26907cdb0a65"),
                            ShortCode = "BE",
                            Title = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("2c1e621e-02a1-4d29-8f34-4b6cd2ab193e"),
                            ShortCode = "BG",
                            Title = "Bulgaria"
                        },
                        new
                        {
                            Id = new Guid("0c4451a5-d2a5-4d7c-829e-ffd04ffe59e0"),
                            ShortCode = "HR",
                            Title = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("467fde52-fad4-4a7f-a925-d9e02e6c8844"),
                            ShortCode = "CY",
                            Title = "Cyprus"
                        },
                        new
                        {
                            Id = new Guid("882780ea-eaa0-4d8b-897d-2d51caf1f0c6"),
                            ShortCode = "CZ",
                            Title = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("38a4d41b-b55c-4578-bbcd-59ff5281bc92"),
                            ShortCode = "DK",
                            Title = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("74d4515c-7574-420b-bd9b-edcf80f7be3f"),
                            ShortCode = "EE",
                            Title = "Estonia"
                        },
                        new
                        {
                            Id = new Guid("73be63ea-9229-4629-889c-9c89c7e9bfa1"),
                            ShortCode = "FI",
                            Title = "Finland"
                        },
                        new
                        {
                            Id = new Guid("a1e6a488-8f3e-4c25-b157-c05bc358b7e4"),
                            ShortCode = "FR",
                            Title = "France"
                        },
                        new
                        {
                            Id = new Guid("d35c8a9c-c8f6-45ce-9983-81dcd016b4ab"),
                            ShortCode = "DE",
                            Title = "Germany"
                        },
                        new
                        {
                            Id = new Guid("c131e9eb-a4d5-4976-93e8-ee7b71a4926a"),
                            ShortCode = "EL",
                            Title = "Greece"
                        },
                        new
                        {
                            Id = new Guid("c797cd25-289a-4d9b-8e3d-db01bbb75e78"),
                            ShortCode = "HU",
                            Title = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("c37685bd-1a87-42c0-aafd-7408556d93c0"),
                            ShortCode = "IS",
                            Title = "Iceland"
                        },
                        new
                        {
                            Id = new Guid("6af0e5fd-7afc-49bd-b59a-0990a07675aa"),
                            ShortCode = "IE",
                            Title = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("f607c426-8be0-4660-9709-ac2111ec1074"),
                            ShortCode = "IT",
                            Title = "Italy"
                        },
                        new
                        {
                            Id = new Guid("bb8f69f8-7ef3-4526-8cbb-8feed6dd5f26"),
                            ShortCode = "LV",
                            Title = "Latvia"
                        },
                        new
                        {
                            Id = new Guid("2a414d2e-5f82-4ab5-ba47-f052f93f5981"),
                            ShortCode = "LI",
                            Title = "Liechtenstein"
                        },
                        new
                        {
                            Id = new Guid("ce2003e0-0eb9-4708-90e8-221180378c7a"),
                            ShortCode = "LT",
                            Title = "Lithuania"
                        },
                        new
                        {
                            Id = new Guid("daf241c8-60e4-4e31-8dd2-2061b129c198"),
                            ShortCode = "LU",
                            Title = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("7f9d2e55-4580-438f-b194-5251ac02a82d"),
                            ShortCode = "MT",
                            Title = "Malta"
                        },
                        new
                        {
                            Id = new Guid("f4d7440f-f8e6-402d-95c1-a55e9930885a"),
                            ShortCode = "NL",
                            Title = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("7ef24448-71c7-4d2c-bcad-bbc3fa0eabf0"),
                            ShortCode = "MK",
                            Title = "North Macedonia"
                        },
                        new
                        {
                            Id = new Guid("675776ad-36cb-4958-9785-ab6e2da8b21c"),
                            ShortCode = "NO",
                            Title = "Norway"
                        },
                        new
                        {
                            Id = new Guid("27516f10-8e95-4189-a80b-aa0958f02851"),
                            ShortCode = "PL",
                            Title = "Poland"
                        },
                        new
                        {
                            Id = new Guid("d06f20ad-a196-463c-9524-d08053edfa20"),
                            ShortCode = "PT",
                            Title = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("4879d19a-8166-4f3b-9cf6-63658d4b6848"),
                            ShortCode = "RO",
                            Title = "Romania"
                        },
                        new
                        {
                            Id = new Guid("248503a5-8b2d-42f4-b681-d7b28d6861db"),
                            ShortCode = "RS",
                            Title = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("145a868d-ddbd-40b6-b657-bee50f683771"),
                            ShortCode = "SK",
                            Title = "Slovakia"
                        },
                        new
                        {
                            Id = new Guid("2bef9da0-0120-496b-9056-1e50525ffa3e"),
                            ShortCode = "SI",
                            Title = "Slovenia"
                        },
                        new
                        {
                            Id = new Guid("07c96206-4fd6-47fc-98e9-b0b12e4ceae3"),
                            ShortCode = "ES",
                            Title = "Spain"
                        },
                        new
                        {
                            Id = new Guid("e62db802-b77b-4797-9ad7-67195ebbaa24"),
                            ShortCode = "SE",
                            Title = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("1f9c07bc-9c09-40be-9678-970a5759c2a8"),
                            ShortCode = "CH",
                            Title = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("75f37eba-8e04-49b9-9200-57da240593ae"),
                            ShortCode = "TR",
                            Title = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("db5491aa-b52c-4c24-a084-f42ce89902d1"),
                            ShortCode = "UK",
                            Title = "United Kingdom"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KabadaAPIdao.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfe6cbd9-0023-4bfd-9dd8-8cb42213739e"),
                            Code = "EN",
                            Title = "English"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TexterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.HasIndex("TexterId");

                    b.ToTable("Plan_Attributes");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.ToTable("SharedPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Texter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<string>("LongValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Texters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b48a7f2a-c5ab-403a-9691-26293365d1c1"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)1,
                            Value = "Land"
                        },
                        new
                        {
                            Id = new Guid("e210f144-abb9-4247-81ef-ebd8a1b5c774"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)2,
                            Value = "Facilities and equipment"
                        },
                        new
                        {
                            Id = new Guid("7721dc70-1a8f-4a76-bf12-7509636e659a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)3,
                            Value = "Vehicles"
                        },
                        new
                        {
                            Id = new Guid("fa8b485c-8fe2-4905-9f8d-1cc7361b7be3"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)4,
                            Value = "Inventory"
                        },
                        new
                        {
                            Id = new Guid("fe0828da-ed5c-4042-bb95-c8131c63e797"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)5,
                            Value = "Skills and experience of employees"
                        },
                        new
                        {
                            Id = new Guid("24fc9136-3e95-4195-8e9d-a1a4675a34ae"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)6,
                            Value = "Corporate image"
                        },
                        new
                        {
                            Id = new Guid("b2146282-d4be-45aa-9fdf-6e8e0ed1be4a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)7,
                            Value = "Patents"
                        },
                        new
                        {
                            Id = new Guid("85290dc7-fb70-4fb3-a6ec-da9f330c2661"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)8,
                            Value = "Trademarks"
                        },
                        new
                        {
                            Id = new Guid("60814dff-de37-4359-b108-c47708393011"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)9,
                            Value = "Copyrights"
                        },
                        new
                        {
                            Id = new Guid("01a6916d-8208-47fb-b02a-eb0897f2863e"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)10,
                            Value = "Operational processes"
                        },
                        new
                        {
                            Id = new Guid("e739d874-35f2-45bb-8771-b9bf512962a2"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)11,
                            Value = "Management processes"
                        },
                        new
                        {
                            Id = new Guid("0d065ef5-a6aa-442b-bea7-2bd39a690033"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)12,
                            Value = "Supporting processes"
                        },
                        new
                        {
                            Id = new Guid("7186f107-fbd4-4fb4-972f-d0efb42530ba"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)13,
                            Value = "Product design"
                        },
                        new
                        {
                            Id = new Guid("0bbc965f-c017-43eb-8d6f-44420f2d4ab8"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)14,
                            Value = "Product assortment"
                        },
                        new
                        {
                            Id = new Guid("6f229f01-48ed-4f36-91a7-2b4cf621c4c2"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)15,
                            Value = "Packaging and labeling"
                        },
                        new
                        {
                            Id = new Guid("037b177c-73ed-49d9-a743-bafeed983b4e"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)16,
                            Value = "Complementary and after-sales service"
                        },
                        new
                        {
                            Id = new Guid("97811a97-a7ac-4aa5-b9a6-33c2154e2884"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)17,
                            Value = "Guarantees and warranties"
                        },
                        new
                        {
                            Id = new Guid("90e37730-a42e-4202-b589-548597ca0aad"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)18,
                            Value = "Return of goods"
                        },
                        new
                        {
                            Id = new Guid("6b5b9f9a-865d-4350-9881-5c124255a972"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)19,
                            Value = "Price"
                        },
                        new
                        {
                            Id = new Guid("5f564e8e-36a2-4159-836a-dc1c30ca30b8"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)20,
                            Value = "Discounts"
                        },
                        new
                        {
                            Id = new Guid("0d163a8c-b4af-4ee4-8b30-d080e791e4f7"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)21,
                            Value = "Payment terms"
                        },
                        new
                        {
                            Id = new Guid("09dfdea5-06a1-4597-9bb2-7b52add32560"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)22,
                            Value = "Customer convenient access to products"
                        },
                        new
                        {
                            Id = new Guid("f177be3c-6958-42cd-a105-181aa1b92bb6"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)23,
                            Value = "Advertising, PR and sales promotion"
                        },
                        new
                        {
                            Id = new Guid("851072d0-dbdd-43ca-8630-ee2646e4f496"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Arrival of new technology"
                        },
                        new
                        {
                            Id = new Guid("363a83f9-722a-4096-81a7-213cde48c1bc"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New regulations"
                        },
                        new
                        {
                            Id = new Guid("46b04a22-4e16-4c3d-b60d-3bfd3f4d8102"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Unfulfilled customer need"
                        },
                        new
                        {
                            Id = new Guid("0c09ffe7-a1f9-4eed-830f-e9bfbb406b50"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Taking business courses (training)"
                        },
                        new
                        {
                            Id = new Guid("c55ff476-287a-43ad-9681-119e8f1a336d"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Trend changes"
                        },
                        new
                        {
                            Id = new Guid("886e12b3-9ff5-44d2-a698-ae84e0cec7f0"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New substitute products"
                        },
                        new
                        {
                            Id = new Guid("86edf8d3-2231-4a08-a107-25db42e3ab3b"),
                            Kind = (short)5,
                            LongValue = "Physical assets are tangible resources that a company uses to create its value proposition. These could include equipment, inventory, buildings, manufacturing plants and distribution networks that enable the business to function.",
                            OrderValue = (short)1,
                            Value = "Physical resources"
                        },
                        new
                        {
                            Id = new Guid("ca28300e-b35b-4f82-b5cc-93b9bffeec5c"),
                            Kind = (short)6,
                            MasterId = new Guid("86edf8d3-2231-4a08-a107-25db42e3ab3b"),
                            OrderValue = (short)1,
                            Value = "Buildings"
                        },
                        new
                        {
                            Id = new Guid("a167debd-cc4a-428a-907a-4807f1367b93"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("ca28300e-b35b-4f82-b5cc-93b9bffeec5c"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("6adacd6c-b52b-49cd-9cc1-e70de931f6a5"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("ca28300e-b35b-4f82-b5cc-93b9bffeec5c"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("dad0ac13-68c9-40fa-bcb5-0b9912758b72"),
                            Kind = (short)6,
                            MasterId = new Guid("86edf8d3-2231-4a08-a107-25db42e3ab3b"),
                            OrderValue = (short)2,
                            Value = "Equipment"
                        },
                        new
                        {
                            Id = new Guid("1ebbd9c5-eba0-46ab-8f09-3296ee443be1"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("dad0ac13-68c9-40fa-bcb5-0b9912758b72"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("0987f623-ee4e-4b6a-8e37-2764c851fedf"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("dad0ac13-68c9-40fa-bcb5-0b9912758b72"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("eb27d5d2-48d2-42ee-91b4-e02501ea2510"),
                            Kind = (short)6,
                            MasterId = new Guid("86edf8d3-2231-4a08-a107-25db42e3ab3b"),
                            OrderValue = (short)3,
                            Value = "Transport"
                        },
                        new
                        {
                            Id = new Guid("2fea0493-62e2-4bf8-bbe8-badee7cb325e"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("eb27d5d2-48d2-42ee-91b4-e02501ea2510"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("9030aac0-8261-4fb3-89b9-651048fd3b52"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("eb27d5d2-48d2-42ee-91b4-e02501ea2510"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("09405fe4-90d2-4d9d-bb19-def9d8184d20"),
                            Kind = (short)6,
                            MasterId = new Guid("86edf8d3-2231-4a08-a107-25db42e3ab3b"),
                            OrderValue = (short)4,
                            Value = "Raw materials"
                        },
                        new
                        {
                            Id = new Guid("22265b31-03a9-4946-8e8c-c2b073ae1a6d"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("09405fe4-90d2-4d9d-bb19-def9d8184d20"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("41de81e7-63aa-4688-81c5-a4d435ac9b10"),
                            Kind = (short)6,
                            MasterId = new Guid("86edf8d3-2231-4a08-a107-25db42e3ab3b"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("c34f0f6f-b94f-4b8f-92ac-567a8df3c09c"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("41de81e7-63aa-4688-81c5-a4d435ac9b10"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("f6f4e0c8-4e29-4dbf-b166-a0a4fb37cfd5"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("41de81e7-63aa-4688-81c5-a4d435ac9b10"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("84824c93-6aef-4798-908b-9a6903d6a032"),
                            Kind = (short)5,
                            LongValue = "These are non-physical, intangible resources like brand, patents, IP, copyrights, and even partnerships. Customer lists, customer knowledge, and even your own people, represent a form of intellectual resource. Intellectual resources take a great deal of time and expenditure to develop. But once developed, they can offer unique advantages to the company.",
                            OrderValue = (short)2,
                            Value = "Intellectual resources"
                        },
                        new
                        {
                            Id = new Guid("abd5e9d2-21df-4b57-87d3-5c4c1ca72acb"),
                            Kind = (short)6,
                            MasterId = new Guid("84824c93-6aef-4798-908b-9a6903d6a032"),
                            OrderValue = (short)1,
                            Value = "Brands"
                        },
                        new
                        {
                            Id = new Guid("238fd15e-74fe-42c0-8e73-6478205f641c"),
                            Kind = (short)6,
                            MasterId = new Guid("84824c93-6aef-4798-908b-9a6903d6a032"),
                            OrderValue = (short)2,
                            Value = "Licenses"
                        },
                        new
                        {
                            Id = new Guid("b7ec42f0-7460-416d-8f83-718b97facea0"),
                            Kind = (short)6,
                            MasterId = new Guid("84824c93-6aef-4798-908b-9a6903d6a032"),
                            OrderValue = (short)3,
                            Value = "Software"
                        },
                        new
                        {
                            Id = new Guid("6be21a9e-f7c7-421d-9684-556e425bdca6"),
                            Kind = (short)6,
                            MasterId = new Guid("84824c93-6aef-4798-908b-9a6903d6a032"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("7194e6a9-d3d4-40b3-8276-a5da003ce33c"),
                            Kind = (short)5,
                            LongValue = "Employees are often the most important and yet the most easily overlooked assets of an organization. Specifically for companies in the service industries or require a great deal of creativity and an extensive knowledge pool, human resources such as customer service representatives, software engineers or scientists are pivotal.",
                            OrderValue = (short)3,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("83b03ab8-b8fd-4a71-a335-dfddbcc55bd6"),
                            Kind = (short)6,
                            MasterId = new Guid("7194e6a9-d3d4-40b3-8276-a5da003ce33c"),
                            OrderValue = (short)1,
                            Value = "Specialists & Know-how"
                        },
                        new
                        {
                            Id = new Guid("a9cba2cc-8028-4c22-a2ad-1de8020cb984"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false},{\"title\":\"Myself\",\"selected\":false}]",
                            MasterId = new Guid("83b03ab8-b8fd-4a71-a335-dfddbcc55bd6"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("a80bb984-7bd4-4baa-8654-da88a054925c"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("83b03ab8-b8fd-4a71-a335-dfddbcc55bd6"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("0dae0a24-d524-4efb-8e56-18432b667f21"),
                            Kind = (short)6,
                            MasterId = new Guid("7194e6a9-d3d4-40b3-8276-a5da003ce33c"),
                            OrderValue = (short)2,
                            Value = "Administrative"
                        },
                        new
                        {
                            Id = new Guid("802d7c03-b0e9-4a19-9a49-b26d00b6e03a"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("0dae0a24-d524-4efb-8e56-18432b667f21"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("7989d7b8-ee72-431a-9f42-0c75bb2ef2a7"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("0dae0a24-d524-4efb-8e56-18432b667f21"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("661a5116-0ff0-4e3e-959e-784a26a65ee6"),
                            Kind = (short)6,
                            MasterId = new Guid("7194e6a9-d3d4-40b3-8276-a5da003ce33c"),
                            OrderValue = (short)3,
                            Value = "Employees directly involved in production or service"
                        },
                        new
                        {
                            Id = new Guid("c95363de-b653-4bad-8b18-234c337ea5dd"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("661a5116-0ff0-4e3e-959e-784a26a65ee6"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("277e34d3-e035-44da-a40b-ab0461522078"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("661a5116-0ff0-4e3e-959e-784a26a65ee6"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("8e1bdffc-0c30-4f51-b9c5-d90e2eb1b088"),
                            Kind = (short)6,
                            MasterId = new Guid("7194e6a9-d3d4-40b3-8276-a5da003ce33c"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("26ff0c82-3f93-4f8c-b735-880989e31d2e"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("8e1bdffc-0c30-4f51-b9c5-d90e2eb1b088"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("7659def3-abda-4f19-b030-91dceac85046"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("8e1bdffc-0c30-4f51-b9c5-d90e2eb1b088"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("0c2cfdb9-4a2f-41a8-880c-68aa4bf3dd35"),
                            Kind = (short)11,
                            LongValue = "Possible if you distribute your products through your own channels – directly, your own store, homepage. Often the case in some service sectors",
                            OrderValue = (short)1,
                            Value = "Self distribution"
                        },
                        new
                        {
                            Id = new Guid("6afd03f8-3461-4413-b8d8-195e163a9c1a"),
                            Kind = (short)11,
                            LongValue = "You can choose «Many Distributors» if you believe that distribution channels are strongly diversified and no distributor is of high importance",
                            OrderValue = (short)2,
                            Value = "Highly diversified distributors"
                        },
                        new
                        {
                            Id = new Guid("1fbe65ed-ade4-4e7e-a592-81090a890b28"),
                            Kind = (short)11,
                            OrderValue = (short)3,
                            Value = "Retailers"
                        },
                        new
                        {
                            Id = new Guid("539f8bc3-6dd5-4bf6-8c2d-caaf8b427102"),
                            Kind = (short)11,
                            OrderValue = (short)4,
                            Value = "Wholesalers"
                        },
                        new
                        {
                            Id = new Guid("5379e2c3-3000-42d1-900e-5a5af1aba07a"),
                            Kind = (short)11,
                            OrderValue = (short)5,
                            Value = "Agents"
                        },
                        new
                        {
                            Id = new Guid("b77b98a7-00bf-41ad-b40d-6d8a88744970"),
                            Kind = (short)11,
                            OrderValue = (short)6,
                            Value = "Others"
                        },
                        new
                        {
                            Id = new Guid("5e14cdd2-dc6e-4314-9b11-fe277be7db7b"),
                            Kind = (short)12,
                            OrderValue = (short)1,
                            Value = "Raw materials, finished or semi-finished goods"
                        },
                        new
                        {
                            Id = new Guid("ad4e8bff-239b-4692-8f8d-29e8d7baa1b7"),
                            Kind = (short)12,
                            OrderValue = (short)2,
                            Value = "Equipment and real estate"
                        },
                        new
                        {
                            Id = new Guid("1d50533b-f007-4583-aff5-9d75c2f3f803"),
                            Kind = (short)12,
                            OrderValue = (short)3,
                            Value = "Outsourced services"
                        },
                        new
                        {
                            Id = new Guid("78b7beb9-16a0-4829-ba81-271cb55fa2f1"),
                            Kind = (short)12,
                            OrderValue = (short)4,
                            Value = "Financiers"
                        },
                        new
                        {
                            Id = new Guid("f97ad6ad-fa27-4105-b0c5-6de392fc9609"),
                            Kind = (short)12,
                            OrderValue = (short)5,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("68972527-ce05-4f06-8bdb-7b60e59d5d1d"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Associations"
                        },
                        new
                        {
                            Id = new Guid("d6b6742d-6857-4639-bbe1-87939a1d6cfe"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Government institutions"
                        },
                        new
                        {
                            Id = new Guid("2cb5038c-598a-4c29-a767-1f8c99e61210"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Non-governmental institutions"
                        },
                        new
                        {
                            Id = new Guid("42743a40-4b2c-48bc-a6f1-5112a6e48275"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Consultants"
                        },
                        new
                        {
                            Id = new Guid("e3be3d33-d20e-4a61-9881-8d17033059d3"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Other"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Facebook")
                        .HasColumnType("bit");

                    b.Property<bool>("Google")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiveNotification")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorAuthEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TwoFactorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TwoFactorStringExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserPhoto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KabadaAPIdao.UserFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("KabadaAPIdao.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Administrator"
                        },
                        new
                        {
                            Id = 100,
                            Title = "Simple"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.HasOne("KabadaAPIdao.Industry", "Industry")
                        .WithMany("Activities")
                        .HasForeignKey("IndustryId");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KabadaAPIdao.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KabadaAPIdao.Texter", "Texter")
                        .WithMany()
                        .HasForeignKey("TexterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");

                    b.Navigation("Texter");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.HasOne("KabadaAPIdao.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}

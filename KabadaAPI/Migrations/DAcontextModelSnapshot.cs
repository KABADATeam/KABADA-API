// <auto-generated />
using System;
using KabadaAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KabadaAPI.Migrations
{
    [DbContext(typeof(DAcontext))]
    partial class DAcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Completed")
                        .HasColumnType("int");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("Img")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsResourcesCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSwotCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("BusinessPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4e0fd55-1d1d-4bcc-9882-a2433109f690"),
                            ShortCode = "AT",
                            Title = "Austria"
                        },
                        new
                        {
                            Id = new Guid("e39c59b3-eb76-4e41-a4cb-d64d14966246"),
                            ShortCode = "BA",
                            Title = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = new Guid("f48248a8-a2db-4647-9447-a65cb84ff385"),
                            ShortCode = "BE",
                            Title = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("2e10e071-704e-4a7a-8b61-b648e4d94b90"),
                            ShortCode = "BG",
                            Title = "Bulgaria"
                        },
                        new
                        {
                            Id = new Guid("6aedc642-7d69-4e68-a56e-605a88496777"),
                            ShortCode = "HR",
                            Title = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("e23644ec-0f0c-40ac-85f4-377789516294"),
                            ShortCode = "CY",
                            Title = "Cyprus"
                        },
                        new
                        {
                            Id = new Guid("e4b0db87-fc51-4127-9aa5-c0642c8c28eb"),
                            ShortCode = "CZ",
                            Title = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("cc8fdf48-fd14-48ce-83a5-c756490d644e"),
                            ShortCode = "DK",
                            Title = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("59e81d0c-7ce6-4c2f-8cf0-0becd0e4a375"),
                            ShortCode = "EE",
                            Title = "Estonia"
                        },
                        new
                        {
                            Id = new Guid("e0c3a22d-148e-4de7-b3eb-b08e97ea99d9"),
                            ShortCode = "FI",
                            Title = "Finland"
                        },
                        new
                        {
                            Id = new Guid("8073b119-3bcf-40c1-9949-01d129279387"),
                            ShortCode = "FR",
                            Title = "France"
                        },
                        new
                        {
                            Id = new Guid("5788860f-3d5b-4780-bf9f-927f20f33a1b"),
                            ShortCode = "DE",
                            Title = "Germany"
                        },
                        new
                        {
                            Id = new Guid("0becb4b5-bff9-495a-bf78-a5c0286b5b8f"),
                            ShortCode = "EL",
                            Title = "Greece"
                        },
                        new
                        {
                            Id = new Guid("d795802a-44ca-4e33-a982-1a745fbd7951"),
                            ShortCode = "HU",
                            Title = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("1f519b96-e9a8-404f-8752-6ebdd5b8e0c2"),
                            ShortCode = "IS",
                            Title = "Iceland"
                        },
                        new
                        {
                            Id = new Guid("4e3893f4-7752-4c43-80cb-f66acfd36c8f"),
                            ShortCode = "IE",
                            Title = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("d460376b-7ce8-486d-aa19-3d666648c476"),
                            ShortCode = "IT",
                            Title = "Italy"
                        },
                        new
                        {
                            Id = new Guid("8c79d5a1-a3bc-4d0f-a8bf-7814fa010a9b"),
                            ShortCode = "LV",
                            Title = "Latvia"
                        },
                        new
                        {
                            Id = new Guid("544b9e3f-a43c-49c1-8dcb-ff0a6acbf9ff"),
                            ShortCode = "LI",
                            Title = "Liechtenstein"
                        },
                        new
                        {
                            Id = new Guid("0d3e0cc1-9b78-408a-8a75-26e37e76a5f6"),
                            ShortCode = "LT",
                            Title = "Lithuania"
                        },
                        new
                        {
                            Id = new Guid("50f86867-4324-41b3-a637-fcecf883396e"),
                            ShortCode = "LU",
                            Title = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("15c24f4c-a609-4238-8b12-e2c148e18644"),
                            ShortCode = "MT",
                            Title = "Malta"
                        },
                        new
                        {
                            Id = new Guid("d0191967-44e0-44f4-bceb-6aa95cfca820"),
                            ShortCode = "NL",
                            Title = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("45195bb0-d530-4021-8bc8-3120c2e24ef9"),
                            ShortCode = "MK",
                            Title = "North Macedonia"
                        },
                        new
                        {
                            Id = new Guid("cec4a420-5e0e-43e6-b03a-92e0f42d915e"),
                            ShortCode = "NO",
                            Title = "Norway"
                        },
                        new
                        {
                            Id = new Guid("04773d0d-8858-4b80-8397-c9e1b29b9bac"),
                            ShortCode = "PL",
                            Title = "Poland"
                        },
                        new
                        {
                            Id = new Guid("b67c7327-9d8c-4372-a138-8336ce440514"),
                            ShortCode = "PT",
                            Title = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("1e7e8ac7-3b89-4a3f-9772-cf72844c5dee"),
                            ShortCode = "RO",
                            Title = "Romania"
                        },
                        new
                        {
                            Id = new Guid("484425d2-dbf1-4405-83aa-e9659e3992af"),
                            ShortCode = "RS",
                            Title = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("f83ac670-b2d9-4cb1-acf8-071576360e88"),
                            ShortCode = "SK",
                            Title = "Slovakia"
                        },
                        new
                        {
                            Id = new Guid("ffb86feb-7234-4aaf-a37c-6abf09c072b2"),
                            ShortCode = "SI",
                            Title = "Slovenia"
                        },
                        new
                        {
                            Id = new Guid("3831c7db-3b31-40d8-a7b0-81348d032931"),
                            ShortCode = "ES",
                            Title = "Spain"
                        },
                        new
                        {
                            Id = new Guid("2d703c95-6e6e-4a79-853d-97f6e8c87e0a"),
                            ShortCode = "SE",
                            Title = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("dcb3f3e2-d48e-4820-b5ff-631078ae86d0"),
                            ShortCode = "CH",
                            Title = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("a29998c5-424d-4de7-9519-5594789ec2eb"),
                            ShortCode = "TR",
                            Title = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("a90fa945-9031-4034-88ae-eac1e7a7ecdc"),
                            ShortCode = "UK",
                            Title = "United Kingdom"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TexterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.HasIndex("TexterId");

                    b.ToTable("Plan_Attributes");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.ToTable("SharedPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Texter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<string>("LongValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Texters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49c0fe09-dc8a-4790-8798-9a5c2d68e551"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)1,
                            Value = "Land"
                        },
                        new
                        {
                            Id = new Guid("a60609ed-b366-465f-af72-270d90bd29ea"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)2,
                            Value = "Facilities and equipment"
                        },
                        new
                        {
                            Id = new Guid("28cef61e-f5f6-4e12-aba1-4062e28956d1"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)3,
                            Value = "Vehicles"
                        },
                        new
                        {
                            Id = new Guid("0539a498-88e5-488f-b34e-aed54e1c30e8"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)4,
                            Value = "Inventory"
                        },
                        new
                        {
                            Id = new Guid("c72bdf54-3fa6-4d67-9277-fda3b10a9f0f"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)5,
                            Value = "Skills and experience of employees"
                        },
                        new
                        {
                            Id = new Guid("e688ddb3-859a-4d76-a520-08723e223737"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)6,
                            Value = "Corporate image"
                        },
                        new
                        {
                            Id = new Guid("0199d89d-f4eb-45a9-9345-b63dedb68cec"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)7,
                            Value = "Patents"
                        },
                        new
                        {
                            Id = new Guid("0cf31d90-bcd3-4907-9fe4-ac433ad6b181"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)8,
                            Value = "Trademarks"
                        },
                        new
                        {
                            Id = new Guid("bbe7f7e1-743f-40e6-b04e-f3119ae64b87"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)9,
                            Value = "Copyrights"
                        },
                        new
                        {
                            Id = new Guid("638b7c4e-c692-49b8-a8e0-4636d32313fd"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)10,
                            Value = "Operational processes"
                        },
                        new
                        {
                            Id = new Guid("fc77fad2-8a83-44a1-998d-fb00174806b3"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)11,
                            Value = "Management processes"
                        },
                        new
                        {
                            Id = new Guid("e8115c4e-54a0-49b0-a48e-46947e29caa5"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)12,
                            Value = "Supporting processes"
                        },
                        new
                        {
                            Id = new Guid("f0e22260-4981-4e44-82fc-258e8f7d1c92"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)13,
                            Value = "Product design"
                        },
                        new
                        {
                            Id = new Guid("2083b1af-00b8-4bd6-afc6-23f92cac5ea3"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)14,
                            Value = "Product assortment"
                        },
                        new
                        {
                            Id = new Guid("c26b95ad-3ecc-440e-b45b-e890697164a7"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)15,
                            Value = "Packaging and labeling"
                        },
                        new
                        {
                            Id = new Guid("f584ebb0-033e-408a-9901-a59a3430e868"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)16,
                            Value = "Complementary and after-sales service"
                        },
                        new
                        {
                            Id = new Guid("e3dd6c6a-7cd3-4620-99b6-ac8acb4f8221"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)17,
                            Value = "Guarantees and warranties"
                        },
                        new
                        {
                            Id = new Guid("cd9e85ae-684a-4a86-8051-5617a14dcaa6"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)18,
                            Value = "Return of goods"
                        },
                        new
                        {
                            Id = new Guid("ba2ca585-c546-4cfd-a2aa-0ad417d2366f"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)19,
                            Value = "Price"
                        },
                        new
                        {
                            Id = new Guid("9019ff86-ac7a-44cd-91ed-75ec4019ec86"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)20,
                            Value = "Discounts"
                        },
                        new
                        {
                            Id = new Guid("c1ebf3b4-01ba-4ad2-80ed-2f9f800313c0"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)21,
                            Value = "Payment terms"
                        },
                        new
                        {
                            Id = new Guid("0e10287e-f817-49ae-93eb-a6eb07def9ab"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)22,
                            Value = "Customer convenient access to products"
                        },
                        new
                        {
                            Id = new Guid("71bcb904-4618-4ff3-9e51-e16d58d52d2d"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)23,
                            Value = "Advertising, PR and sales promotion"
                        },
                        new
                        {
                            Id = new Guid("d718d324-53c2-44ef-b034-c55981c6e86a"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Arrival of new technology"
                        },
                        new
                        {
                            Id = new Guid("2a519826-56b3-4537-bb49-3ff7e838e944"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New regulations"
                        },
                        new
                        {
                            Id = new Guid("c6b12dac-2064-47e0-be73-f9a07a04855b"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Unfulfilled customer need"
                        },
                        new
                        {
                            Id = new Guid("ea57cc4e-9d78-4678-8ac3-3e67c57102fd"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Taking business courses (training)"
                        },
                        new
                        {
                            Id = new Guid("b34c44c8-b5e3-4631-8a80-0028f760bc3c"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Trend changes"
                        },
                        new
                        {
                            Id = new Guid("c606530d-7486-46b4-9534-44d74f88a36f"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New substitute products"
                        },
                        new
                        {
                            Id = new Guid("e9da852b-53e5-4867-9421-e8d10710db6e"),
                            Kind = (short)5,
                            LongValue = "Physical assets are tangible resources that a company uses to create its value proposition. These could include equipment, inventory, buildings, manufacturing plants and distribution networks that enable the business to function.",
                            OrderValue = (short)1,
                            Value = "Physical resources"
                        },
                        new
                        {
                            Id = new Guid("bb90edee-c97b-4803-8475-ef344a773c02"),
                            Kind = (short)6,
                            MasterId = new Guid("e9da852b-53e5-4867-9421-e8d10710db6e"),
                            OrderValue = (short)1,
                            Value = "Buildings"
                        },
                        new
                        {
                            Id = new Guid("b453f6b5-b149-4d16-b881-b82c5736c88f"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("bb90edee-c97b-4803-8475-ef344a773c02"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("04024f0e-854c-4f5a-835c-3b45fc889d29"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("bb90edee-c97b-4803-8475-ef344a773c02"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("f4a3c056-a780-460d-baf4-174d41f7cd17"),
                            Kind = (short)6,
                            MasterId = new Guid("e9da852b-53e5-4867-9421-e8d10710db6e"),
                            OrderValue = (short)2,
                            Value = "Equipment"
                        },
                        new
                        {
                            Id = new Guid("a4fbbb1f-876a-43ca-97ac-bf8ef90bf3f4"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("f4a3c056-a780-460d-baf4-174d41f7cd17"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("fdd1055c-6d5c-4bb4-8c4f-8bc07954a585"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("f4a3c056-a780-460d-baf4-174d41f7cd17"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("93c3762a-1167-4072-8971-9b0ae4efc235"),
                            Kind = (short)6,
                            MasterId = new Guid("e9da852b-53e5-4867-9421-e8d10710db6e"),
                            OrderValue = (short)3,
                            Value = "Transport"
                        },
                        new
                        {
                            Id = new Guid("e35fcd99-91a3-4801-9ac9-6f0de323ed37"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("93c3762a-1167-4072-8971-9b0ae4efc235"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("b01d4ce5-b9ab-458a-8f3d-0938fd41071b"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("93c3762a-1167-4072-8971-9b0ae4efc235"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("50ad2055-07fa-4aed-849b-1d34383c39fa"),
                            Kind = (short)6,
                            MasterId = new Guid("e9da852b-53e5-4867-9421-e8d10710db6e"),
                            OrderValue = (short)4,
                            Value = "Raw materials"
                        },
                        new
                        {
                            Id = new Guid("a74a5da9-b2aa-442c-b8eb-7657f7316fb4"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("50ad2055-07fa-4aed-849b-1d34383c39fa"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("3c362689-b916-42f0-817b-b3b28201cfa1"),
                            Kind = (short)6,
                            MasterId = new Guid("e9da852b-53e5-4867-9421-e8d10710db6e"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("c4aaffb4-fe64-4120-8bcf-73417c58c200"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("3c362689-b916-42f0-817b-b3b28201cfa1"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("1fdc383c-2648-4211-98bf-63633599ed8f"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("3c362689-b916-42f0-817b-b3b28201cfa1"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("c597782f-8c15-45f7-b35f-e7816f367775"),
                            Kind = (short)5,
                            LongValue = "These are non-physical, intangible resources like brand, patents, IP, copyrights, and even partnerships. Customer lists, customer knowledge, and even your own people, represent a form of intellectual resource. Intellectual resources take a great deal of time and expenditure to develop. But once developed, they can offer unique advantages to the company.",
                            OrderValue = (short)2,
                            Value = "Intellectual resources"
                        },
                        new
                        {
                            Id = new Guid("ff4ab428-d072-409c-9f0b-9d1bbf154a25"),
                            Kind = (short)6,
                            MasterId = new Guid("c597782f-8c15-45f7-b35f-e7816f367775"),
                            OrderValue = (short)1,
                            Value = "Brands"
                        },
                        new
                        {
                            Id = new Guid("3308ad06-db11-4a3f-af03-3d7ccacb6557"),
                            Kind = (short)6,
                            MasterId = new Guid("c597782f-8c15-45f7-b35f-e7816f367775"),
                            OrderValue = (short)2,
                            Value = "Licenses"
                        },
                        new
                        {
                            Id = new Guid("5e725d78-30b0-4854-8e7a-50c659de4a75"),
                            Kind = (short)6,
                            MasterId = new Guid("c597782f-8c15-45f7-b35f-e7816f367775"),
                            OrderValue = (short)3,
                            Value = "Software"
                        },
                        new
                        {
                            Id = new Guid("93c346e5-b325-4ddd-b019-442c67be3876"),
                            Kind = (short)6,
                            MasterId = new Guid("c597782f-8c15-45f7-b35f-e7816f367775"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("c7a5d11f-092e-4618-b46c-49543c8cda5e"),
                            Kind = (short)5,
                            LongValue = "Employees are often the most important and yet the most easily overlooked assets of an organization. Specifically for companies in the service industries or require a great deal of creativity and an extensive knowledge pool, human resources such as customer service representatives, software engineers or scientists are pivotal.",
                            OrderValue = (short)3,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("0dfc4ae0-9dc1-4597-a002-4e027a5a7695"),
                            Kind = (short)6,
                            MasterId = new Guid("c7a5d11f-092e-4618-b46c-49543c8cda5e"),
                            OrderValue = (short)1,
                            Value = "Specialists & Know-how"
                        },
                        new
                        {
                            Id = new Guid("b821ffed-3147-43ac-8ca8-16ab5b1853d0"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false},{\"title\":\"Myself\",\"selected\":false}]",
                            MasterId = new Guid("0dfc4ae0-9dc1-4597-a002-4e027a5a7695"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("2d29030e-57f1-4b4b-b1df-717ae31ba334"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("0dfc4ae0-9dc1-4597-a002-4e027a5a7695"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("e6e9fff2-702b-4b75-aeb6-63364a25d2c3"),
                            Kind = (short)6,
                            MasterId = new Guid("c7a5d11f-092e-4618-b46c-49543c8cda5e"),
                            OrderValue = (short)2,
                            Value = "Administrative"
                        },
                        new
                        {
                            Id = new Guid("acd9995b-0003-41e9-a573-ac9a26e290fb"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("e6e9fff2-702b-4b75-aeb6-63364a25d2c3"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("d83c9efd-0cdb-4aa6-b34e-5a195441ad60"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("e6e9fff2-702b-4b75-aeb6-63364a25d2c3"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("115e6d17-fdb9-46d9-b312-5489990c84db"),
                            Kind = (short)6,
                            MasterId = new Guid("c7a5d11f-092e-4618-b46c-49543c8cda5e"),
                            OrderValue = (short)3,
                            Value = "Employees directly involved in production or service"
                        },
                        new
                        {
                            Id = new Guid("fa577636-c89c-48df-a895-8170c68f1518"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("115e6d17-fdb9-46d9-b312-5489990c84db"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("decec754-b0d0-456d-ae77-5549250c6a0d"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("115e6d17-fdb9-46d9-b312-5489990c84db"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("808df8f9-4510-43e6-a98a-32fb360f4c4c"),
                            Kind = (short)6,
                            MasterId = new Guid("c7a5d11f-092e-4618-b46c-49543c8cda5e"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("a07871ce-6a3b-4a50-b942-5d6441e332b8"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("808df8f9-4510-43e6-a98a-32fb360f4c4c"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("e13a6a74-ffe6-4956-b81f-9ad929df548f"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("808df8f9-4510-43e6-a98a-32fb360f4c4c"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Facebook")
                        .HasColumnType("bit");

                    b.Property<bool>("Google")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiveNotification")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorAuthEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TwoFactorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TwoFactorStringExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserPhoto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KabadaAPIdao.UserFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("KabadaAPIdao.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Administrator"
                        },
                        new
                        {
                            Id = 100,
                            Title = "Simple"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.HasOne("KabadaAPIdao.Industry", "Industry")
                        .WithMany("Activities")
                        .HasForeignKey("IndustryId");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KabadaAPIdao.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KabadaAPIdao.Texter", "Texter")
                        .WithMany()
                        .HasForeignKey("TexterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");

                    b.Navigation("Texter");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.HasOne("KabadaAPIdao.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}

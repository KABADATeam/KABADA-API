// <auto-generated />
using System;
using KabadaAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KabadaAPI.Migrations
{
    [DbContext(typeof(DAcontext))]
    partial class DAcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Completed")
                        .HasColumnType("int");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("Img")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPartnersCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResourcesCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSwotCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UserId");

                    b.ToTable("BusinessPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f883ddf0-5d8b-4fed-bd23-bd548e62ef52"),
                            ShortCode = "AT",
                            Title = "Austria"
                        },
                        new
                        {
                            Id = new Guid("67294a13-5cc7-4957-bf30-b7e6f8668f08"),
                            ShortCode = "BA",
                            Title = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = new Guid("3f4d0d5d-df90-420d-959c-46dac63338f8"),
                            ShortCode = "BE",
                            Title = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("8807c907-2602-435e-b775-a28a92ee823d"),
                            ShortCode = "BG",
                            Title = "Bulgaria"
                        },
                        new
                        {
                            Id = new Guid("1e49e328-0585-4d17-a41e-de5f63f2f67c"),
                            ShortCode = "HR",
                            Title = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("251bde3d-501b-4115-b39a-8d211d19075e"),
                            ShortCode = "CY",
                            Title = "Cyprus"
                        },
                        new
                        {
                            Id = new Guid("98a5062b-4b9f-42f7-adfa-f7511fe7a2fb"),
                            ShortCode = "CZ",
                            Title = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("7e0b50a5-3a8a-402b-8668-947d86a9d11c"),
                            ShortCode = "DK",
                            Title = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("d9636e5d-43b8-4ebd-98f9-3e79b8e35b67"),
                            ShortCode = "EE",
                            Title = "Estonia"
                        },
                        new
                        {
                            Id = new Guid("d2509e19-ebc1-4ecc-8f74-4f1d0e1af19d"),
                            ShortCode = "FI",
                            Title = "Finland"
                        },
                        new
                        {
                            Id = new Guid("e486f388-3d22-411d-9603-01712e22494b"),
                            ShortCode = "FR",
                            Title = "France"
                        },
                        new
                        {
                            Id = new Guid("6600ecd1-42e8-4551-be6c-b30ed33a9b43"),
                            ShortCode = "DE",
                            Title = "Germany"
                        },
                        new
                        {
                            Id = new Guid("797a963f-f2ac-453b-900d-25cc925dfbba"),
                            ShortCode = "EL",
                            Title = "Greece"
                        },
                        new
                        {
                            Id = new Guid("9db4787e-c6a6-442e-af85-297199ca9406"),
                            ShortCode = "HU",
                            Title = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("7ce7a764-454d-4346-8f79-eb2e33957367"),
                            ShortCode = "IS",
                            Title = "Iceland"
                        },
                        new
                        {
                            Id = new Guid("68aaccaf-45c5-41d3-928c-b53d480cec43"),
                            ShortCode = "IE",
                            Title = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("31c5e870-e010-4a0d-ac04-95acbd3e03a3"),
                            ShortCode = "IT",
                            Title = "Italy"
                        },
                        new
                        {
                            Id = new Guid("572a5294-8176-434e-a620-6c1cab82c874"),
                            ShortCode = "LV",
                            Title = "Latvia"
                        },
                        new
                        {
                            Id = new Guid("6ab1d45d-ac10-4910-bd35-d9fc3bf37914"),
                            ShortCode = "LI",
                            Title = "Liechtenstein"
                        },
                        new
                        {
                            Id = new Guid("28053832-56ec-4965-85d6-4a3740753ce1"),
                            ShortCode = "LT",
                            Title = "Lithuania"
                        },
                        new
                        {
                            Id = new Guid("f2aa2096-fb29-4f7a-b093-480662a9d6c1"),
                            ShortCode = "LU",
                            Title = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("ac62e557-5b44-45b6-893b-90d575b33c6a"),
                            ShortCode = "MT",
                            Title = "Malta"
                        },
                        new
                        {
                            Id = new Guid("125dd411-cb90-4c6d-97e0-2d9cbe7d2b8e"),
                            ShortCode = "NL",
                            Title = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("99182b0f-60ab-4934-b1ca-6ee7b5177e27"),
                            ShortCode = "MK",
                            Title = "North Macedonia"
                        },
                        new
                        {
                            Id = new Guid("decad40d-ac08-4a39-bc94-bb20742f7751"),
                            ShortCode = "NO",
                            Title = "Norway"
                        },
                        new
                        {
                            Id = new Guid("076b7649-fa8c-449b-8b20-7a0f090ba6ac"),
                            ShortCode = "PL",
                            Title = "Poland"
                        },
                        new
                        {
                            Id = new Guid("d14ac2b6-42c8-490a-b0b8-768ae1cc4c03"),
                            ShortCode = "PT",
                            Title = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("ab1c195d-92e4-4933-ae1e-6c2248e72c89"),
                            ShortCode = "RO",
                            Title = "Romania"
                        },
                        new
                        {
                            Id = new Guid("91bd88f2-2306-4ee8-ba89-b999449d3439"),
                            ShortCode = "RS",
                            Title = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("d1abf92c-1c99-4121-9c12-87b1d7fe5452"),
                            ShortCode = "SK",
                            Title = "Slovakia"
                        },
                        new
                        {
                            Id = new Guid("b82204ef-e4e0-43b9-a13c-08da4e6cd6ea"),
                            ShortCode = "SI",
                            Title = "Slovenia"
                        },
                        new
                        {
                            Id = new Guid("abec23e6-53e8-4781-8d7c-b13227a1a060"),
                            ShortCode = "ES",
                            Title = "Spain"
                        },
                        new
                        {
                            Id = new Guid("09c7de0f-5c6d-4285-98ce-729bb90d42d1"),
                            ShortCode = "SE",
                            Title = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("ff65ab71-8307-41e4-9562-f5ec3f363480"),
                            ShortCode = "CH",
                            Title = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("a1858b95-23a2-42e5-b4de-d23b64dd8080"),
                            ShortCode = "TR",
                            Title = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("59873b6e-b3cd-4f61-a9d7-2e26c6209cee"),
                            ShortCode = "UK",
                            Title = "United Kingdom"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KabadaAPIdao.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eceb3b43-aa82-491e-bfc9-c26a66598b4a"),
                            Code = "EN",
                            Title = "English"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TexterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.HasIndex("TexterId");

                    b.ToTable("Plan_Attributes");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.ToTable("SharedPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Texter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<string>("LongValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Texters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f34af46d-f673-473f-b0a5-24e59dfcd7d9"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)1,
                            Value = "Land"
                        },
                        new
                        {
                            Id = new Guid("0c025a79-10c2-46a6-a335-59bc45988e1b"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)2,
                            Value = "Facilities and equipment"
                        },
                        new
                        {
                            Id = new Guid("e878f418-42a2-466a-8106-276b30aef1d4"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)3,
                            Value = "Vehicles"
                        },
                        new
                        {
                            Id = new Guid("6ed5a4d0-b196-4bd0-89f1-1a0503c13bc1"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)4,
                            Value = "Inventory"
                        },
                        new
                        {
                            Id = new Guid("e02e201b-c691-4cc6-b181-76684b155e00"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)5,
                            Value = "Skills and experience of employees"
                        },
                        new
                        {
                            Id = new Guid("caf0b5b9-f418-4634-aa09-9d5f7184fcdb"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)6,
                            Value = "Corporate image"
                        },
                        new
                        {
                            Id = new Guid("47968e45-6a29-4689-bf81-30037fd052cc"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)7,
                            Value = "Patents"
                        },
                        new
                        {
                            Id = new Guid("fb9743d2-a68f-43b5-bc91-44094fb041f0"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)8,
                            Value = "Trademarks"
                        },
                        new
                        {
                            Id = new Guid("2168a6f1-4fbf-4540-9206-20c37e225d74"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)9,
                            Value = "Copyrights"
                        },
                        new
                        {
                            Id = new Guid("7f4dddd5-b172-492f-a7a2-b2fe2848fcf7"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)10,
                            Value = "Operational processes"
                        },
                        new
                        {
                            Id = new Guid("84399838-624b-432c-b770-1e8d1ffad910"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)11,
                            Value = "Management processes"
                        },
                        new
                        {
                            Id = new Guid("572d591f-d760-4bff-9da7-89651598db1e"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)12,
                            Value = "Supporting processes"
                        },
                        new
                        {
                            Id = new Guid("d034bd4a-8be8-4f02-bae3-f4323a518e5f"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)13,
                            Value = "Product design"
                        },
                        new
                        {
                            Id = new Guid("c6de9a9b-debd-4d1a-af6b-64c9d85d0635"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)14,
                            Value = "Product assortment"
                        },
                        new
                        {
                            Id = new Guid("4c6d22ac-8410-483d-9489-f058ed83b1c4"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)15,
                            Value = "Packaging and labeling"
                        },
                        new
                        {
                            Id = new Guid("267b3b8d-c88f-4eb7-8b51-8572c441256d"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)16,
                            Value = "Complementary and after-sales service"
                        },
                        new
                        {
                            Id = new Guid("798b27e2-e249-48fb-b45e-7eaee1b4e1a2"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)17,
                            Value = "Guarantees and warranties"
                        },
                        new
                        {
                            Id = new Guid("5a557a67-8dd0-4ca9-8d4b-26509bb8e0d6"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)18,
                            Value = "Return of goods"
                        },
                        new
                        {
                            Id = new Guid("858499c2-f5d4-4043-bbe3-c04edbd2e797"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)19,
                            Value = "Price"
                        },
                        new
                        {
                            Id = new Guid("6b665ffe-ef4b-4361-8a1a-8a7d22cb405a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)20,
                            Value = "Discounts"
                        },
                        new
                        {
                            Id = new Guid("5f330fe3-1310-4e51-8149-7bd1d0f00c5e"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)21,
                            Value = "Payment terms"
                        },
                        new
                        {
                            Id = new Guid("67b4e40c-d48a-4b01-bcde-7a61dec32cf8"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)22,
                            Value = "Customer convenient access to products"
                        },
                        new
                        {
                            Id = new Guid("3003b2a3-17ba-45ca-8735-3efc837455a2"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)23,
                            Value = "Advertising, PR and sales promotion"
                        },
                        new
                        {
                            Id = new Guid("3116451a-5cd5-4d7f-8c30-2e7adfbb95d6"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Arrival of new technology"
                        },
                        new
                        {
                            Id = new Guid("01818a10-ef95-4a49-8872-f03cf9696cb8"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New regulations"
                        },
                        new
                        {
                            Id = new Guid("6f4fdaf2-218e-4c07-b8b0-fe67793d26fe"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Unfulfilled customer need"
                        },
                        new
                        {
                            Id = new Guid("9cd25ae8-85b8-4107-996a-20c696c9b71f"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Taking business courses (training)"
                        },
                        new
                        {
                            Id = new Guid("5c37d7c4-7d20-4da1-b5ce-6d41585e1640"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Trend changes"
                        },
                        new
                        {
                            Id = new Guid("7c4c92fb-30d8-4c78-a9c7-3ee124aec71c"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New substitute products"
                        },
                        new
                        {
                            Id = new Guid("39363367-4498-4e25-961b-30e5277824b3"),
                            Kind = (short)5,
                            LongValue = "Physical assets are tangible resources that a company uses to create its value proposition. These could include equipment, inventory, buildings, manufacturing plants and distribution networks that enable the business to function.",
                            OrderValue = (short)1,
                            Value = "Physical resources"
                        },
                        new
                        {
                            Id = new Guid("271dcdbc-abd8-4d19-9865-1e950236746b"),
                            Kind = (short)6,
                            MasterId = new Guid("39363367-4498-4e25-961b-30e5277824b3"),
                            OrderValue = (short)1,
                            Value = "Buildings"
                        },
                        new
                        {
                            Id = new Guid("f42bb076-a3f6-493c-94f9-0ad6e0ad919f"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("271dcdbc-abd8-4d19-9865-1e950236746b"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("b85d17b1-9a8c-45f6-9b93-ca901d772ed3"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("271dcdbc-abd8-4d19-9865-1e950236746b"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("39aef0a6-c362-4fdf-8bb5-c14790992d25"),
                            Kind = (short)6,
                            MasterId = new Guid("39363367-4498-4e25-961b-30e5277824b3"),
                            OrderValue = (short)2,
                            Value = "Equipment"
                        },
                        new
                        {
                            Id = new Guid("b0b71b74-d6b7-4b31-b63f-273570313073"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("39aef0a6-c362-4fdf-8bb5-c14790992d25"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("9e399546-02bd-4dbf-a6a3-c07d323a9b38"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("39aef0a6-c362-4fdf-8bb5-c14790992d25"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("3377b6d1-eea1-4e73-aa94-433431be3809"),
                            Kind = (short)6,
                            MasterId = new Guid("39363367-4498-4e25-961b-30e5277824b3"),
                            OrderValue = (short)3,
                            Value = "Transport"
                        },
                        new
                        {
                            Id = new Guid("b389a9eb-cfcb-4625-9aa5-f169271bf4bd"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("3377b6d1-eea1-4e73-aa94-433431be3809"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("cffad898-6e6e-4fca-b640-1c1cc7d1b306"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("3377b6d1-eea1-4e73-aa94-433431be3809"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("5693e3a7-4087-4e72-979c-764047ef1f93"),
                            Kind = (short)6,
                            MasterId = new Guid("39363367-4498-4e25-961b-30e5277824b3"),
                            OrderValue = (short)4,
                            Value = "Raw materials"
                        },
                        new
                        {
                            Id = new Guid("cab8caad-5718-466e-b141-e621e7f68ff0"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("5693e3a7-4087-4e72-979c-764047ef1f93"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("b1abc288-b7f1-4b97-90a8-485c0726eb36"),
                            Kind = (short)6,
                            MasterId = new Guid("39363367-4498-4e25-961b-30e5277824b3"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("5e97e24d-008b-4423-95f9-f6aa928bde9e"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false},{\"title\":\"Own\",\"selected\":false}]",
                            MasterId = new Guid("b1abc288-b7f1-4b97-90a8-485c0726eb36"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("f0963886-06c3-486d-b7ee-415cda75f74c"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("b1abc288-b7f1-4b97-90a8-485c0726eb36"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("6b65f3dd-a03c-4952-9452-dadd75b4a95a"),
                            Kind = (short)5,
                            LongValue = "These are non-physical, intangible resources like brand, patents, IP, copyrights, and even partnerships. Customer lists, customer knowledge, and even your own people, represent a form of intellectual resource. Intellectual resources take a great deal of time and expenditure to develop. But once developed, they can offer unique advantages to the company.",
                            OrderValue = (short)2,
                            Value = "Intellectual resources"
                        },
                        new
                        {
                            Id = new Guid("cadc5b01-fc48-42b2-b666-d8bca086a0b6"),
                            Kind = (short)6,
                            MasterId = new Guid("6b65f3dd-a03c-4952-9452-dadd75b4a95a"),
                            OrderValue = (short)1,
                            Value = "Brands"
                        },
                        new
                        {
                            Id = new Guid("684b0412-7cb6-4d11-a691-054d991c247a"),
                            Kind = (short)6,
                            MasterId = new Guid("6b65f3dd-a03c-4952-9452-dadd75b4a95a"),
                            OrderValue = (short)2,
                            Value = "Licenses"
                        },
                        new
                        {
                            Id = new Guid("c65de7f2-fd1e-4866-8d0b-c35e30e5e169"),
                            Kind = (short)6,
                            MasterId = new Guid("6b65f3dd-a03c-4952-9452-dadd75b4a95a"),
                            OrderValue = (short)3,
                            Value = "Software"
                        },
                        new
                        {
                            Id = new Guid("9e841747-c68f-437d-9940-0de27c3b19ef"),
                            Kind = (short)6,
                            MasterId = new Guid("6b65f3dd-a03c-4952-9452-dadd75b4a95a"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("852a36a2-c211-4e93-b40c-adb3db9c4fc3"),
                            Kind = (short)5,
                            LongValue = "Employees are often the most important and yet the most easily overlooked assets of an organization. Specifically for companies in the service industries or require a great deal of creativity and an extensive knowledge pool, human resources such as customer service representatives, software engineers or scientists are pivotal.",
                            OrderValue = (short)3,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("b6caaf9a-f2e0-40d2-a1cb-0c0ec6d39088"),
                            Kind = (short)6,
                            MasterId = new Guid("852a36a2-c211-4e93-b40c-adb3db9c4fc3"),
                            OrderValue = (short)1,
                            Value = "Specialists & Know-how"
                        },
                        new
                        {
                            Id = new Guid("0ecb37f4-d020-4e2b-9b6e-0c86dc3c526b"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false},{\"title\":\"Myself\",\"selected\":false}]",
                            MasterId = new Guid("b6caaf9a-f2e0-40d2-a1cb-0c0ec6d39088"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("44ba2dde-39c8-4f10-bc52-d3d28e47a0a2"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("b6caaf9a-f2e0-40d2-a1cb-0c0ec6d39088"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("71700013-f3f9-44dd-ad40-9e846d2d5c4e"),
                            Kind = (short)6,
                            MasterId = new Guid("852a36a2-c211-4e93-b40c-adb3db9c4fc3"),
                            OrderValue = (short)2,
                            Value = "Administrative"
                        },
                        new
                        {
                            Id = new Guid("8849710d-2c62-42dc-8150-aa227ed0c1ef"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("71700013-f3f9-44dd-ad40-9e846d2d5c4e"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("ed633691-5072-4941-b841-454a981e2964"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("71700013-f3f9-44dd-ad40-9e846d2d5c4e"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("0231c1bb-182e-40c6-a804-8af92e044597"),
                            Kind = (short)6,
                            MasterId = new Guid("852a36a2-c211-4e93-b40c-adb3db9c4fc3"),
                            OrderValue = (short)3,
                            Value = "Employees directly involved in production or service"
                        },
                        new
                        {
                            Id = new Guid("9a115814-1361-42de-b497-218947fe7421"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("0231c1bb-182e-40c6-a804-8af92e044597"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("de3a1b7e-4484-4a80-bb29-3f953ff534c6"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("0231c1bb-182e-40c6-a804-8af92e044597"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("2aa82b9b-55ad-4edf-b803-e3fcd824aa81"),
                            Kind = (short)6,
                            MasterId = new Guid("852a36a2-c211-4e93-b40c-adb3db9c4fc3"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("bdf5d695-c9d1-44c4-b282-9c031afa9a9e"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("2aa82b9b-55ad-4edf-b803-e3fcd824aa81"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("f9efe749-c3bf-444b-a546-848ef49f19b5"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("2aa82b9b-55ad-4edf-b803-e3fcd824aa81"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("62658529-7218-4b71-889e-91463db28a81"),
                            Kind = (short)11,
                            LongValue = "Possible if you distribute your products through your own channels – directly, your own store, homepage. Often the case in some service sectors",
                            OrderValue = (short)1,
                            Value = "Self distribution"
                        },
                        new
                        {
                            Id = new Guid("d83b96a6-a9dd-4973-bc08-a21de75e4410"),
                            Kind = (short)11,
                            LongValue = "You can choose «Many Distributors» if you believe that distribution channels are strongly diversified and no distributor is of high importance",
                            OrderValue = (short)2,
                            Value = "Highly diversified distributors"
                        },
                        new
                        {
                            Id = new Guid("a43cf479-36a8-45a7-876f-e5d1f088b84c"),
                            Kind = (short)11,
                            OrderValue = (short)3,
                            Value = "Retailers"
                        },
                        new
                        {
                            Id = new Guid("3c1446e9-7ed7-401c-9114-62c332d92d21"),
                            Kind = (short)11,
                            OrderValue = (short)4,
                            Value = "Wholesalers"
                        },
                        new
                        {
                            Id = new Guid("d3f84d79-d537-4022-b5d5-d8f9658ad86b"),
                            Kind = (short)11,
                            OrderValue = (short)5,
                            Value = "Agents"
                        },
                        new
                        {
                            Id = new Guid("60a78cd6-b604-42c1-9d59-ab1ad00a6ef8"),
                            Kind = (short)11,
                            OrderValue = (short)6,
                            Value = "Others"
                        },
                        new
                        {
                            Id = new Guid("c70fba2d-acaa-4ee7-8fa1-eb36a58465fd"),
                            Kind = (short)12,
                            OrderValue = (short)1,
                            Value = "Raw materials, finished or semi-finished goods"
                        },
                        new
                        {
                            Id = new Guid("84b8b59c-1d4a-4551-a280-1c9cb3f8dee7"),
                            Kind = (short)12,
                            OrderValue = (short)2,
                            Value = "Equipment and real estate"
                        },
                        new
                        {
                            Id = new Guid("5cc7826c-bc2f-4f46-abb8-bd94d6d7750f"),
                            Kind = (short)12,
                            OrderValue = (short)3,
                            Value = "Outsourced services"
                        },
                        new
                        {
                            Id = new Guid("2255b227-0123-445d-83f5-353daed34dc0"),
                            Kind = (short)12,
                            OrderValue = (short)4,
                            Value = "Financiers"
                        },
                        new
                        {
                            Id = new Guid("325f8665-e772-4cf3-be74-3dd2298fe9c9"),
                            Kind = (short)12,
                            OrderValue = (short)5,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("ebfd74de-b7f7-427e-be29-6fc948732f12"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Associations"
                        },
                        new
                        {
                            Id = new Guid("7a96e169-cc5d-4996-8501-e9b62244f88f"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Government institutions"
                        },
                        new
                        {
                            Id = new Guid("287a2707-bbef-422c-9add-d54ff88649e9"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Non-governmental institutions"
                        },
                        new
                        {
                            Id = new Guid("cc393f2e-3124-4469-98d3-5195f253ab59"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Consultants"
                        },
                        new
                        {
                            Id = new Guid("7e084d1a-80b7-47f4-8d57-5fb9011517d6"),
                            Kind = (short)13,
                            OrderValue = (short)1,
                            Value = "Other"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Facebook")
                        .HasColumnType("bit");

                    b.Property<bool>("Google")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiveNotification")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorAuthEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TwoFactorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TwoFactorStringExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserPhoto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KabadaAPIdao.UserFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("KabadaAPIdao.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Administrator"
                        },
                        new
                        {
                            Id = 100,
                            Title = "Simple"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.HasOne("KabadaAPIdao.Industry", "Industry")
                        .WithMany("Activities")
                        .HasForeignKey("IndustryId");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KabadaAPIdao.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("KabadaAPIdao.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Country");

                    b.Navigation("Language");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KabadaAPIdao.Texter", "Texter")
                        .WithMany()
                        .HasForeignKey("TexterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");

                    b.Navigation("Texter");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.HasOne("KabadaAPIdao.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}

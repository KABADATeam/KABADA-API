// <auto-generated />
using System;
using KabadaAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KabadaAPI.Migrations
{
    [DbContext(typeof(DAcontext))]
    [Migration("20210615093419_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Completed")
                        .HasColumnType("int");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("Img")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsResourcesCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSwotCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("BusinessPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("420230d1-0749-4533-8ece-4135bae3ebda"),
                            ShortCode = "AT",
                            Title = "Austria"
                        },
                        new
                        {
                            Id = new Guid("cd6eba4c-5672-4dcb-ac52-767aec958e23"),
                            ShortCode = "BA",
                            Title = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = new Guid("b3b27d47-9742-417f-b0de-d85a128c2d8e"),
                            ShortCode = "BE",
                            Title = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("6d9915ca-9644-4242-8a1d-b3d2f05b6539"),
                            ShortCode = "BG",
                            Title = "Bulgaria"
                        },
                        new
                        {
                            Id = new Guid("3be02dd1-d859-49d4-95d2-f008e58dbd5d"),
                            ShortCode = "HR",
                            Title = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("232c51e6-6ac6-4696-8d95-676ff0541011"),
                            ShortCode = "CY",
                            Title = "Cyprus"
                        },
                        new
                        {
                            Id = new Guid("260f1d83-260c-44a8-82d7-7086f87bbed5"),
                            ShortCode = "CZ",
                            Title = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("7418a8da-05cf-494d-bb75-b66c3f3f9a8d"),
                            ShortCode = "DK",
                            Title = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("a12fe0ab-f001-4b3d-94a4-67d5ed6c7934"),
                            ShortCode = "EE",
                            Title = "Estonia"
                        },
                        new
                        {
                            Id = new Guid("e65f5554-98f7-4630-9ebd-5c7a3c1136a8"),
                            ShortCode = "FI",
                            Title = "Finland"
                        },
                        new
                        {
                            Id = new Guid("5796198a-a13e-4951-9168-3981eb935517"),
                            ShortCode = "FR",
                            Title = "France"
                        },
                        new
                        {
                            Id = new Guid("ed8d9290-6a03-4c78-91a9-ded88049eb7f"),
                            ShortCode = "DE",
                            Title = "Germany"
                        },
                        new
                        {
                            Id = new Guid("8c5a7461-111b-478c-8acd-79246bfeab2a"),
                            ShortCode = "EL",
                            Title = "Greece"
                        },
                        new
                        {
                            Id = new Guid("7c893ea6-8cdb-427d-847a-68bd1612b5f0"),
                            ShortCode = "HU",
                            Title = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("939a630c-84d5-4261-a2bc-fe3d94c30669"),
                            ShortCode = "IS",
                            Title = "Iceland"
                        },
                        new
                        {
                            Id = new Guid("eb714e01-7c1d-416d-898e-73e79f91f82e"),
                            ShortCode = "IE",
                            Title = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("64d404c4-9d91-47de-8414-53f07fbab775"),
                            ShortCode = "IT",
                            Title = "Italy"
                        },
                        new
                        {
                            Id = new Guid("6763e3db-481b-4877-b9d2-752d78fa260b"),
                            ShortCode = "LV",
                            Title = "Latvia"
                        },
                        new
                        {
                            Id = new Guid("07c054a2-7d9b-439a-b54a-e0a1c7d3b10e"),
                            ShortCode = "LI",
                            Title = "Liechtenstein"
                        },
                        new
                        {
                            Id = new Guid("b2828cb1-e324-405b-b4e4-46721820b1a7"),
                            ShortCode = "LT",
                            Title = "Lithuania"
                        },
                        new
                        {
                            Id = new Guid("180ee9cd-8c49-42a3-add1-441c39c57584"),
                            ShortCode = "LU",
                            Title = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("17c9038d-8e7e-483f-be0e-644ed916ad39"),
                            ShortCode = "MT",
                            Title = "Malta"
                        },
                        new
                        {
                            Id = new Guid("a9efbed3-0805-44e0-bf85-43046d907b1a"),
                            ShortCode = "NL",
                            Title = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("0ef44bfb-4696-42a3-b597-6e2783e623ce"),
                            ShortCode = "MK",
                            Title = "North Macedonia"
                        },
                        new
                        {
                            Id = new Guid("ec258459-44fa-4903-a0c7-767323843a00"),
                            ShortCode = "NO",
                            Title = "Norway"
                        },
                        new
                        {
                            Id = new Guid("68707b72-def8-41ad-9694-ab4ab073cbe0"),
                            ShortCode = "PL",
                            Title = "Poland"
                        },
                        new
                        {
                            Id = new Guid("422a978a-8acf-463b-92f3-b3df15b5bdd1"),
                            ShortCode = "PT",
                            Title = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("5fc79f6f-35de-4ad3-8b69-cbaafefc317d"),
                            ShortCode = "RO",
                            Title = "Romania"
                        },
                        new
                        {
                            Id = new Guid("5e32fe0d-fb6a-4417-9807-89b10682e041"),
                            ShortCode = "RS",
                            Title = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("13c2e120-e200-40eb-b9b3-749d8a45b2d5"),
                            ShortCode = "SK",
                            Title = "Slovakia"
                        },
                        new
                        {
                            Id = new Guid("bd33ce5e-04d8-48a4-81cb-375136506b75"),
                            ShortCode = "SI",
                            Title = "Slovenia"
                        },
                        new
                        {
                            Id = new Guid("37d0511d-6d35-4270-93b0-0f6c98080c1a"),
                            ShortCode = "ES",
                            Title = "Spain"
                        },
                        new
                        {
                            Id = new Guid("7f288f77-f005-40a1-9bf0-2bcd0f62d4dd"),
                            ShortCode = "SE",
                            Title = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("f8309568-62d8-43a8-bf99-512f9cb21307"),
                            ShortCode = "CH",
                            Title = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("fc9fb381-6d4e-45c1-987b-88448e4f413b"),
                            ShortCode = "TR",
                            Title = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("f948901a-4d49-433a-a2aa-89f9caf7ffc6"),
                            ShortCode = "UK",
                            Title = "United Kingdom"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TexterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.HasIndex("TexterId");

                    b.ToTable("Plan_Attributes");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.ToTable("SharedPlans");
                });

            modelBuilder.Entity("KabadaAPIdao.Texter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<string>("LongValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Texters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d18b9f0-1bc4-4ccb-b02a-361d2926d18a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)1,
                            Value = "Land"
                        },
                        new
                        {
                            Id = new Guid("908848e8-c31e-4ac2-83ca-76225f7f1cdd"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)2,
                            Value = "Facilities and equipment"
                        },
                        new
                        {
                            Id = new Guid("68fb9a25-75d5-4e2d-8668-323b00917d97"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)3,
                            Value = "Vehicles"
                        },
                        new
                        {
                            Id = new Guid("3db1db93-bcf5-4491-9640-8831043b94bc"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)4,
                            Value = "Inventory"
                        },
                        new
                        {
                            Id = new Guid("a2c02476-2691-4203-be48-354deb445d0c"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)5,
                            Value = "Skills and experience of employees"
                        },
                        new
                        {
                            Id = new Guid("882e7bd3-9fc4-40c4-a3a1-33329b0f7693"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)6,
                            Value = "Corporate image"
                        },
                        new
                        {
                            Id = new Guid("4d4b6c93-d5f4-43d1-8a67-1c9b6642d850"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)7,
                            Value = "Patents"
                        },
                        new
                        {
                            Id = new Guid("cfe9ad59-1d0d-49d3-8416-28df2d05e88c"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)8,
                            Value = "Trademarks"
                        },
                        new
                        {
                            Id = new Guid("28a524b6-2569-408a-9430-6ac2fb4b1621"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)9,
                            Value = "Copyrights"
                        },
                        new
                        {
                            Id = new Guid("397f6b31-f86c-46f5-83f7-b8853e0ca393"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)10,
                            Value = "Operational processes"
                        },
                        new
                        {
                            Id = new Guid("275d4cb4-74f1-4fcd-8ede-2e117de91b1d"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)11,
                            Value = "Management processes"
                        },
                        new
                        {
                            Id = new Guid("17f3df6c-0bdd-4846-9a19-e155e38d31a3"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)12,
                            Value = "Supporting processes"
                        },
                        new
                        {
                            Id = new Guid("950c3e5b-c1d7-401c-8769-1929808c602a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)13,
                            Value = "Product design"
                        },
                        new
                        {
                            Id = new Guid("98669c70-b9b5-4901-a262-9ddef513e61f"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)14,
                            Value = "Product assortment"
                        },
                        new
                        {
                            Id = new Guid("0a57b538-971a-4433-b018-46ca87440886"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)15,
                            Value = "Packaging and labeling"
                        },
                        new
                        {
                            Id = new Guid("060dd9f2-965d-42ce-a62a-c84c73d3521a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)16,
                            Value = "Complementary and after-sales service"
                        },
                        new
                        {
                            Id = new Guid("8aca00fa-bf1f-46d5-844f-8fb38177fdd4"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)17,
                            Value = "Guarantees and warranties"
                        },
                        new
                        {
                            Id = new Guid("41d3f5d3-47df-4fb2-b27c-4ef98dfecb06"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)18,
                            Value = "Return of goods"
                        },
                        new
                        {
                            Id = new Guid("ccff4586-a8b2-4563-9e35-d820aedd9b0c"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)19,
                            Value = "Price"
                        },
                        new
                        {
                            Id = new Guid("cf476f67-0ad3-4c08-a516-a11b34324310"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)20,
                            Value = "Discounts"
                        },
                        new
                        {
                            Id = new Guid("4b9af6da-e3ec-4ffe-85a0-efdd535ba081"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)21,
                            Value = "Payment terms"
                        },
                        new
                        {
                            Id = new Guid("d57c7c0e-10c9-439f-a95e-c839ea8971e0"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)22,
                            Value = "Customer convenient access to products"
                        },
                        new
                        {
                            Id = new Guid("4f7ff17f-3994-4df9-bcfa-d055397ee8a1"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)23,
                            Value = "Advertising, PR and sales promotion"
                        },
                        new
                        {
                            Id = new Guid("d26ca7c0-f903-4afe-b3a1-ea7557cd7935"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Arrival of new technology"
                        },
                        new
                        {
                            Id = new Guid("1d626ff4-fcf1-4d11-a027-3512d6d0c0ef"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New regulations"
                        },
                        new
                        {
                            Id = new Guid("18ee5bec-ce85-48fd-bfcf-e977b59fa2ea"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Unfulfilled customer need"
                        },
                        new
                        {
                            Id = new Guid("f09fead5-f828-48c9-8fb4-1ed0d562bde7"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Taking business courses (training)"
                        },
                        new
                        {
                            Id = new Guid("9100165a-5447-4c65-8dc4-4dde0162d2c8"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Trend changes"
                        },
                        new
                        {
                            Id = new Guid("5641268d-1cf9-4e58-b79d-7257c65d5540"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New substitute products"
                        },
                        new
                        {
                            Id = new Guid("1cba3fbe-5af2-4845-b2cd-9d5f66cbd13f"),
                            Kind = (short)5,
                            LongValue = "Physical assets are tangible resources that a company uses to create its value proposition. These could include equipment, inventory, buildings, manufacturing plants and distribution networks that enable the business to function.",
                            OrderValue = (short)1,
                            Value = "Physical resources"
                        },
                        new
                        {
                            Id = new Guid("9acd91c1-be41-4d7c-b1ee-87a97c041706"),
                            Kind = (short)6,
                            MasterId = new Guid("1cba3fbe-5af2-4845-b2cd-9d5f66cbd13f"),
                            OrderValue = (short)1,
                            Value = "Buildings"
                        },
                        new
                        {
                            Id = new Guid("d2db4aeb-b5d0-4812-b449-c44e38e7dfa4"),
                            Kind = (short)7,
                            MasterId = new Guid("9acd91c1-be41-4d7c-b1ee-87a97c041706"),
                            OrderValue = (short)1,
                            Value = "Office"
                        },
                        new
                        {
                            Id = new Guid("06058194-90e9-4cc6-95ad-c8ce968d5987"),
                            Kind = (short)7,
                            MasterId = new Guid("9acd91c1-be41-4d7c-b1ee-87a97c041706"),
                            OrderValue = (short)2,
                            Value = "Manufacturing Buildings"
                        },
                        new
                        {
                            Id = new Guid("1f07bdfb-1e3d-4e6e-8156-6096ff282668"),
                            Kind = (short)7,
                            MasterId = new Guid("9acd91c1-be41-4d7c-b1ee-87a97c041706"),
                            OrderValue = (short)3,
                            Value = "Inventory Buildings"
                        },
                        new
                        {
                            Id = new Guid("a3cbef62-52a0-48a8-9e86-b432033e46b5"),
                            Kind = (short)7,
                            MasterId = new Guid("9acd91c1-be41-4d7c-b1ee-87a97c041706"),
                            OrderValue = (short)4,
                            Value = "Sales Buildings (Shop)"
                        },
                        new
                        {
                            Id = new Guid("cfaae7b0-bc34-4fbc-bb8a-7ddbbe7afe66"),
                            Kind = (short)7,
                            MasterId = new Guid("9acd91c1-be41-4d7c-b1ee-87a97c041706"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("107b2af6-74fe-4d5b-b37c-c09c89e28864"),
                            Kind = (short)6,
                            MasterId = new Guid("1cba3fbe-5af2-4845-b2cd-9d5f66cbd13f"),
                            OrderValue = (short)2,
                            Value = "Production machinery"
                        },
                        new
                        {
                            Id = new Guid("c6a0110e-5a65-4ab4-a6c8-4203aab66a67"),
                            Kind = (short)6,
                            MasterId = new Guid("1cba3fbe-5af2-4845-b2cd-9d5f66cbd13f"),
                            OrderValue = (short)3,
                            Value = "Transport"
                        },
                        new
                        {
                            Id = new Guid("2f422b71-51fd-4e8d-950f-0d46afe073fe"),
                            Kind = (short)6,
                            MasterId = new Guid("1cba3fbe-5af2-4845-b2cd-9d5f66cbd13f"),
                            OrderValue = (short)4,
                            Value = "Resources"
                        },
                        new
                        {
                            Id = new Guid("5a08b013-d3ef-4757-95ba-1b5c2069db43"),
                            Kind = (short)6,
                            MasterId = new Guid("1cba3fbe-5af2-4845-b2cd-9d5f66cbd13f"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("91695e3a-7066-4660-af9e-6e26fa458432"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Rent\",\"selected\":false},{\"title\":\"Buy\",\"selected\":false}]",
                            MasterId = new Guid("1cba3fbe-5af2-4845-b2cd-9d5f66cbd13f"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("d9c8d061-49e5-4b16-bbef-cc1d8e29ac57"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("1cba3fbe-5af2-4845-b2cd-9d5f66cbd13f"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("4c207d8f-b9d6-4f23-b1b2-d9ea4bbea561"),
                            Kind = (short)5,
                            LongValue = "These are non-physical, intangible resources like brand, patents, IP, copyrights, and even partnerships. Customer lists, customer knowledge, and even your own people, represent a form of intellectual resource. Intellectual resources take a great deal of time and expenditure to develop. But once developed, they can offer unique advantages to the company.",
                            OrderValue = (short)2,
                            Value = "Intellectual resources"
                        },
                        new
                        {
                            Id = new Guid("c5213ec4-0eb9-493d-8214-087cf0f2f011"),
                            Kind = (short)6,
                            MasterId = new Guid("4c207d8f-b9d6-4f23-b1b2-d9ea4bbea561"),
                            OrderValue = (short)1,
                            Value = "Brands"
                        },
                        new
                        {
                            Id = new Guid("0ddfb52d-c33f-493d-be89-e9273aea2119"),
                            Kind = (short)6,
                            MasterId = new Guid("4c207d8f-b9d6-4f23-b1b2-d9ea4bbea561"),
                            OrderValue = (short)2,
                            Value = "Licenses"
                        },
                        new
                        {
                            Id = new Guid("f4b8108c-ece8-4cd4-860b-02ce86253660"),
                            Kind = (short)6,
                            MasterId = new Guid("4c207d8f-b9d6-4f23-b1b2-d9ea4bbea561"),
                            OrderValue = (short)3,
                            Value = "Software"
                        },
                        new
                        {
                            Id = new Guid("2dfe03a4-9eed-48cc-93a7-37568e6f6225"),
                            Kind = (short)6,
                            MasterId = new Guid("4c207d8f-b9d6-4f23-b1b2-d9ea4bbea561"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("bdc1c905-c4e7-41be-9315-2f112b5bf249"),
                            Kind = (short)5,
                            LongValue = "Employees are often the most important and yet the most easily overlooked assets of an organization. Specifically for companies in the service industries or require a great deal of creativity and an extensive knowledge pool, human resources such as customer service representatives, software engineers or scientists are pivotal.",
                            OrderValue = (short)3,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("c60e5310-4c56-4cba-b217-25e1558ccff3"),
                            Kind = (short)6,
                            MasterId = new Guid("bdc1c905-c4e7-41be-9315-2f112b5bf249"),
                            OrderValue = (short)1,
                            Value = "Know-how"
                        },
                        new
                        {
                            Id = new Guid("4676586b-820d-46ee-93cf-61a634566377"),
                            Kind = (short)6,
                            MasterId = new Guid("bdc1c905-c4e7-41be-9315-2f112b5bf249"),
                            OrderValue = (short)2,
                            Value = "Office"
                        },
                        new
                        {
                            Id = new Guid("473403a2-023e-4aa1-8986-968d20a9c1f4"),
                            Kind = (short)6,
                            MasterId = new Guid("bdc1c905-c4e7-41be-9315-2f112b5bf249"),
                            OrderValue = (short)3,
                            Value = "Factory/service"
                        },
                        new
                        {
                            Id = new Guid("984c2e97-5ebe-45cc-8cab-5cd7295a6ced"),
                            Kind = (short)6,
                            MasterId = new Guid("bdc1c905-c4e7-41be-9315-2f112b5bf249"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("aad92c20-5da9-4d4d-90f5-2feb61085d24"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Employ\",\"selected\":false},{\"title\":\"Outsource\",\"selected\":false}]",
                            MasterId = new Guid("bdc1c905-c4e7-41be-9315-2f112b5bf249"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("049ddeff-4ae5-433a-aa92-2dfccbb426e0"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Permanently\",\"selected\":false},{\"title\":\"Time to time\",\"selected\":false}]",
                            MasterId = new Guid("bdc1c905-c4e7-41be-9315-2f112b5bf249"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("4e9200d3-380b-4781-918f-13f03d61ea36"),
                            Kind = (short)5,
                            LongValue = "The financial resource includes cash, lines of credit and the ability to have stock option plans for employees. All businesses have key resources in finance, but some will have stronger financial resources than other, such as banks that are based entirely on the availability of this key resource.",
                            OrderValue = (short)4,
                            Value = "Financial resources"
                        },
                        new
                        {
                            Id = new Guid("30bd9a06-5ed6-4b7d-a034-fc6057e4e2a8"),
                            Kind = (short)6,
                            MasterId = new Guid("4e9200d3-380b-4781-918f-13f03d61ea36"),
                            OrderValue = (short)1,
                            Value = "For start-up"
                        },
                        new
                        {
                            Id = new Guid("b92b2ad0-9bb2-4a48-8ac6-faa3f697a928"),
                            Kind = (short)6,
                            MasterId = new Guid("4e9200d3-380b-4781-918f-13f03d61ea36"),
                            OrderValue = (short)2,
                            Value = "Operational"
                        },
                        new
                        {
                            Id = new Guid("7098477b-31ea-4e90-9db3-656f6ac50015"),
                            Kind = (short)8,
                            LongValue = "[{\"title\":\"Yes\",\"selected\":false},{\"title\":\"No\",\"selected\":false}]",
                            MasterId = new Guid("4e9200d3-380b-4781-918f-13f03d61ea36"),
                            OrderValue = (short)1,
                            Value = "Is available?"
                        },
                        new
                        {
                            Id = new Guid("c8bba288-51a8-4a51-abca-1c8666a12a0c"),
                            Kind = (short)5,
                            LongValue = "",
                            OrderValue = (short)5,
                            Value = "Other"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Facebook")
                        .HasColumnType("bit");

                    b.Property<bool>("Google")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiveNotification")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorAuthEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TwoFactorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TwoFactorStringExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserPhoto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KabadaAPIdao.UserFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("KabadaAPIdao.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Administrator"
                        },
                        new
                        {
                            Id = 100,
                            Title = "Simple"
                        });
                });

            modelBuilder.Entity("KabadaAPIdao.Activity", b =>
                {
                    b.HasOne("KabadaAPIdao.Industry", "Industry")
                        .WithMany("Activities")
                        .HasForeignKey("IndustryId");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("KabadaAPIdao.BusinessPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KabadaAPIdao.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.Plan_Attribute", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KabadaAPIdao.Texter", "Texter")
                        .WithMany()
                        .HasForeignKey("TexterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");

                    b.Navigation("Texter");
                });

            modelBuilder.Entity("KabadaAPIdao.RefreshToken", b =>
                {
                    b.HasOne("KabadaAPIdao.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPIdao.SharedPlan", b =>
                {
                    b.HasOne("KabadaAPIdao.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");
                });

            modelBuilder.Entity("KabadaAPIdao.User", b =>
                {
                    b.HasOne("KabadaAPIdao.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("KabadaAPIdao.Industry", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}

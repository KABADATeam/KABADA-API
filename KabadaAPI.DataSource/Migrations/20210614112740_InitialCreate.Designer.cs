// <auto-generated />
using System;
using KabadaAPI.DataSource;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KabadaAPI.DataSource.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210614112740_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.BusinessPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Completed")
                        .HasColumnType("int");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("Img")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsResourcesCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSwotCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("BusinessPlans");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b5872ebd-e57a-40aa-86ec-9b2a0741c694"),
                            ShortCode = "AT",
                            Title = "Austria"
                        },
                        new
                        {
                            Id = new Guid("17b71f31-ec46-4154-be81-161c6657c5d7"),
                            ShortCode = "BA",
                            Title = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = new Guid("a4fa1703-c9db-4a3c-a8fc-b12ae1a261d5"),
                            ShortCode = "BE",
                            Title = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("81b5d6f1-0f89-4b98-9ec0-f9aeeba3a30b"),
                            ShortCode = "BG",
                            Title = "Bulgaria"
                        },
                        new
                        {
                            Id = new Guid("5ca43cb2-4f62-4298-a8a6-2da0385f8a21"),
                            ShortCode = "HR",
                            Title = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("d25db4b5-14a6-4c8e-a1ee-4789e82f2efe"),
                            ShortCode = "CY",
                            Title = "Cyprus"
                        },
                        new
                        {
                            Id = new Guid("1a714dfc-1210-425b-b4a9-8cdd175d9b22"),
                            ShortCode = "CZ",
                            Title = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("3d5151d5-e68b-463b-a692-d99d668d093a"),
                            ShortCode = "DK",
                            Title = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("0f3a4c95-b086-43e7-b4b5-e8ad1bdbabb3"),
                            ShortCode = "EE",
                            Title = "Estonia"
                        },
                        new
                        {
                            Id = new Guid("112cc554-fde3-4c96-91d4-014725b1b7c6"),
                            ShortCode = "FI",
                            Title = "Finland"
                        },
                        new
                        {
                            Id = new Guid("54fbce70-8c59-4247-b05a-7b7d99e6abfb"),
                            ShortCode = "FR",
                            Title = "France"
                        },
                        new
                        {
                            Id = new Guid("a190a512-5487-47c8-8d9e-36c1fe367d88"),
                            ShortCode = "DE",
                            Title = "Germany"
                        },
                        new
                        {
                            Id = new Guid("c8637b40-37cd-4aa1-bad8-52c219748abf"),
                            ShortCode = "EL",
                            Title = "Greece"
                        },
                        new
                        {
                            Id = new Guid("0f74e853-419a-412e-9166-6fc74a4eb9be"),
                            ShortCode = "HU",
                            Title = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("04018539-6595-43aa-81ed-2e34b85a31c6"),
                            ShortCode = "IS",
                            Title = "Iceland"
                        },
                        new
                        {
                            Id = new Guid("3dd2bf5e-a026-4cc6-bb3c-b59776c6c6ad"),
                            ShortCode = "IE",
                            Title = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("2d9f818b-980a-4fb2-bfea-6bdd99d9ef68"),
                            ShortCode = "IT",
                            Title = "Italy"
                        },
                        new
                        {
                            Id = new Guid("a73ab775-28c3-4507-8053-cede3ffa4294"),
                            ShortCode = "LV",
                            Title = "Latvia"
                        },
                        new
                        {
                            Id = new Guid("aa57b8d3-1274-4d38-8df8-577e43e8c98b"),
                            ShortCode = "LI",
                            Title = "Liechtenstein"
                        },
                        new
                        {
                            Id = new Guid("b49b07ee-1178-4b5e-8b54-b7144b926318"),
                            ShortCode = "LT",
                            Title = "Lithuania"
                        },
                        new
                        {
                            Id = new Guid("fd09a859-fa08-4afc-b96b-32aff76350b7"),
                            ShortCode = "LU",
                            Title = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("a09ef231-cd2b-4308-b556-cc785ccaff27"),
                            ShortCode = "MT",
                            Title = "Malta"
                        },
                        new
                        {
                            Id = new Guid("13da9327-3aa4-4181-af35-0c32103880a5"),
                            ShortCode = "NL",
                            Title = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("90a54674-a5cd-4399-8a7a-d66a13c01f13"),
                            ShortCode = "MK",
                            Title = "North Macedonia"
                        },
                        new
                        {
                            Id = new Guid("abc0ab2f-2715-41e4-993f-67f30809e811"),
                            ShortCode = "NO",
                            Title = "Norway"
                        },
                        new
                        {
                            Id = new Guid("f7fd7f2d-d879-4160-bf2c-4b54639105e3"),
                            ShortCode = "PL",
                            Title = "Poland"
                        },
                        new
                        {
                            Id = new Guid("2355ec33-081c-424c-8baa-7c5f542bcc13"),
                            ShortCode = "PT",
                            Title = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("d90294c5-46ae-4628-a6fd-e4a0697bcb3c"),
                            ShortCode = "RO",
                            Title = "Romania"
                        },
                        new
                        {
                            Id = new Guid("4ec06aa2-ea9a-43f4-b9fe-9d409264c94c"),
                            ShortCode = "RS",
                            Title = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("875fc182-02e5-4e00-9986-637d3165baf0"),
                            ShortCode = "SK",
                            Title = "Slovakia"
                        },
                        new
                        {
                            Id = new Guid("334ce5d4-fdfe-47ce-8957-af89596987d8"),
                            ShortCode = "SI",
                            Title = "Slovenia"
                        },
                        new
                        {
                            Id = new Guid("7e5d0629-1e5d-4e7c-ab05-471da5c22063"),
                            ShortCode = "ES",
                            Title = "Spain"
                        },
                        new
                        {
                            Id = new Guid("4da7bbd1-8272-44f2-bd41-07f8f67e4604"),
                            ShortCode = "SE",
                            Title = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("76676b76-0ac8-4356-bc2a-dd443151504e"),
                            ShortCode = "CH",
                            Title = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("859dc24f-5dc2-4d99-9108-4728e7a152b7"),
                            ShortCode = "TR",
                            Title = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("2abbab27-ef65-489e-ad30-651075c37f39"),
                            ShortCode = "UK",
                            Title = "United Kingdom"
                        });
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Plan_Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TexterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.HasIndex("TexterId");

                    b.ToTable("Plan_Attributes");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.SharedPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.ToTable("SharedPlans");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Texter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<string>("LongValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Texters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5aa85b59-6d64-46d7-af52-f45dd738bd3a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)1,
                            Value = "Land"
                        },
                        new
                        {
                            Id = new Guid("fe54001b-8990-4f62-bb60-e082a4b07b6a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)2,
                            Value = "Facilities and equipment"
                        },
                        new
                        {
                            Id = new Guid("9b2cac64-b713-489f-b067-2972dd20d5fc"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)3,
                            Value = "Vehicles"
                        },
                        new
                        {
                            Id = new Guid("510e79ce-3e03-44cd-93e6-373c9d824d78"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)4,
                            Value = "Inventory"
                        },
                        new
                        {
                            Id = new Guid("5c67d066-543c-46e7-8ba7-0de76013839d"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)5,
                            Value = "Skills and experience of employees"
                        },
                        new
                        {
                            Id = new Guid("91c8b1b3-da56-4a67-8e75-09d875d5416e"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)6,
                            Value = "Corporate image"
                        },
                        new
                        {
                            Id = new Guid("448b5afb-dfed-4a51-b391-22be6fd52b3d"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)7,
                            Value = "Patents"
                        },
                        new
                        {
                            Id = new Guid("3942cc1a-3cd5-40e0-8750-78b8bbde665a"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)8,
                            Value = "Trademarks"
                        },
                        new
                        {
                            Id = new Guid("d48d26a5-ae1c-4e0d-8652-dfeaa73ae85d"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)9,
                            Value = "Copyrights"
                        },
                        new
                        {
                            Id = new Guid("21d3c26f-744f-42c2-9aa7-1c0a6d4888f9"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)10,
                            Value = "Operational processes"
                        },
                        new
                        {
                            Id = new Guid("49902b60-1bf8-4350-ab22-b72afa3f3084"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)11,
                            Value = "Management processes"
                        },
                        new
                        {
                            Id = new Guid("55da0563-1644-4866-ad21-cf196bf46a2b"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)12,
                            Value = "Supporting processes"
                        },
                        new
                        {
                            Id = new Guid("f56c9973-9245-4094-ba17-a3190b08f9fc"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)13,
                            Value = "Product design"
                        },
                        new
                        {
                            Id = new Guid("f2afac72-bcf9-4772-a2d0-e3507acf7df4"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)14,
                            Value = "Product assortment"
                        },
                        new
                        {
                            Id = new Guid("83236494-d936-4d77-845c-2e2e9167185e"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)15,
                            Value = "Packaging and labeling"
                        },
                        new
                        {
                            Id = new Guid("640259b9-9766-40bb-baff-d37faf1bc76c"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)16,
                            Value = "Complementary and after-sales service"
                        },
                        new
                        {
                            Id = new Guid("db0409ca-53e2-4490-9ace-b6866bc20b85"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)17,
                            Value = "Guarantees and warranties"
                        },
                        new
                        {
                            Id = new Guid("d13710e7-b11a-45b8-9582-0ad00b2f4ee5"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)18,
                            Value = "Return of goods"
                        },
                        new
                        {
                            Id = new Guid("5f09beb6-83f5-4ab9-8475-e16bda459e9d"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)19,
                            Value = "Price"
                        },
                        new
                        {
                            Id = new Guid("7b0165ff-eb32-4cb6-9fff-eff1856b017c"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)20,
                            Value = "Discounts"
                        },
                        new
                        {
                            Id = new Guid("ac8b76f0-2969-4eb3-a7e8-89ef94b5a8c5"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)21,
                            Value = "Payment terms"
                        },
                        new
                        {
                            Id = new Guid("7f4b9787-fe1e-428a-a4b0-e189b731f0c9"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)22,
                            Value = "Customer convenient access to products"
                        },
                        new
                        {
                            Id = new Guid("cd3e23f5-d7e3-494f-8d04-c90f4582da75"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)23,
                            Value = "Advertising, PR and sales promotion"
                        },
                        new
                        {
                            Id = new Guid("a49db530-7bf3-4aed-a92a-1c3237b2e521"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Arrival of new technology"
                        },
                        new
                        {
                            Id = new Guid("59bf3122-3552-4d82-97cd-1ef92a3da19e"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New regulations"
                        },
                        new
                        {
                            Id = new Guid("93e41b78-e22c-4ec3-aa48-134eb49a71ee"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Unfulfilled customer need"
                        },
                        new
                        {
                            Id = new Guid("3d516379-6434-4867-95f5-523fde0f1e22"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Taking business courses (training)"
                        },
                        new
                        {
                            Id = new Guid("1e8cbbc0-dadc-4384-b511-c300f27ff6ca"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Trend changes"
                        },
                        new
                        {
                            Id = new Guid("8b17d97f-33bd-4da5-b079-10b776fde626"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New substitute products"
                        },
                        new
                        {
                            Id = new Guid("6a57885f-d29c-4711-9cd4-418b6c19a934"),
                            Kind = (short)5,
                            LongValue = "Physical assets are tangible resources that a company uses to create its value proposition. These could include equipment, inventory, buildings, manufacturing plants and distribution networks that enable the business to function.",
                            OrderValue = (short)1,
                            Value = "Physical resources"
                        },
                        new
                        {
                            Id = new Guid("edc8b3e5-11be-4249-a484-44ce2b859113"),
                            Kind = (short)6,
                            MasterId = new Guid("6a57885f-d29c-4711-9cd4-418b6c19a934"),
                            OrderValue = (short)1,
                            Value = "Buildings"
                        },
                        new
                        {
                            Id = new Guid("f7e19352-5ff9-496e-9a88-31b61be7bde6"),
                            Kind = (short)7,
                            MasterId = new Guid("edc8b3e5-11be-4249-a484-44ce2b859113"),
                            OrderValue = (short)1,
                            Value = "Office"
                        },
                        new
                        {
                            Id = new Guid("c71fdca3-3f2d-4035-8441-1203cf076481"),
                            Kind = (short)7,
                            MasterId = new Guid("edc8b3e5-11be-4249-a484-44ce2b859113"),
                            OrderValue = (short)2,
                            Value = "Manufacturing Buildings"
                        },
                        new
                        {
                            Id = new Guid("d4706ede-1d06-4443-9dd3-bdf5455254fb"),
                            Kind = (short)7,
                            MasterId = new Guid("edc8b3e5-11be-4249-a484-44ce2b859113"),
                            OrderValue = (short)3,
                            Value = "Inventory Buildings"
                        },
                        new
                        {
                            Id = new Guid("fbaaafd3-581d-4aaa-ade5-cfe677d3958c"),
                            Kind = (short)7,
                            MasterId = new Guid("edc8b3e5-11be-4249-a484-44ce2b859113"),
                            OrderValue = (short)4,
                            Value = "Sales Buildings (Shop)"
                        },
                        new
                        {
                            Id = new Guid("84692b32-d348-4343-bf44-23fe70eb9b6b"),
                            Kind = (short)7,
                            MasterId = new Guid("edc8b3e5-11be-4249-a484-44ce2b859113"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("272a015b-06d0-4ed9-8731-6126a354947d"),
                            Kind = (short)6,
                            MasterId = new Guid("6a57885f-d29c-4711-9cd4-418b6c19a934"),
                            OrderValue = (short)2,
                            Value = "Production machinery"
                        },
                        new
                        {
                            Id = new Guid("2c5ca1e7-07c1-4668-817c-dba536021faf"),
                            Kind = (short)6,
                            MasterId = new Guid("6a57885f-d29c-4711-9cd4-418b6c19a934"),
                            OrderValue = (short)3,
                            Value = "Transport"
                        },
                        new
                        {
                            Id = new Guid("3228bccf-1946-4416-8602-a36205ea396c"),
                            Kind = (short)6,
                            MasterId = new Guid("6a57885f-d29c-4711-9cd4-418b6c19a934"),
                            OrderValue = (short)4,
                            Value = "Resources"
                        },
                        new
                        {
                            Id = new Guid("18ea6e9c-02d4-4241-a8c7-ccf6943aa175"),
                            Kind = (short)6,
                            MasterId = new Guid("6a57885f-d29c-4711-9cd4-418b6c19a934"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("f74ea26e-c238-452a-abd7-a63793554aef"),
                            Kind = (short)8,
                            MasterId = new Guid("6a57885f-d29c-4711-9cd4-418b6c19a934"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("4db5e670-16ea-4482-af34-bc3469bb997c"),
                            Kind = (short)8,
                            MasterId = new Guid("6a57885f-d29c-4711-9cd4-418b6c19a934"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("4e1a8655-b359-434c-b5b1-76b59c4e98c0"),
                            Kind = (short)5,
                            LongValue = "These are non-physical, intangible resources like brand, patents, IP, copyrights, and even partnerships. Customer lists, customer knowledge, and even your own people, represent a form of intellectual resource. Intellectual resources take a great deal of time and expenditure to develop. But once developed, they can offer unique advantages to the company.",
                            OrderValue = (short)2,
                            Value = "Intellectual resources"
                        },
                        new
                        {
                            Id = new Guid("16f95ec9-1b9c-4a4c-8ab4-fa407b92777a"),
                            Kind = (short)6,
                            MasterId = new Guid("4e1a8655-b359-434c-b5b1-76b59c4e98c0"),
                            OrderValue = (short)1,
                            Value = "Brands"
                        },
                        new
                        {
                            Id = new Guid("901ba8ba-0b0d-4da2-8980-d1746845b336"),
                            Kind = (short)6,
                            MasterId = new Guid("4e1a8655-b359-434c-b5b1-76b59c4e98c0"),
                            OrderValue = (short)2,
                            Value = "Licenses"
                        },
                        new
                        {
                            Id = new Guid("425eba14-b1d2-4d24-80b1-4babc65e9bda"),
                            Kind = (short)6,
                            MasterId = new Guid("4e1a8655-b359-434c-b5b1-76b59c4e98c0"),
                            OrderValue = (short)3,
                            Value = "Software"
                        },
                        new
                        {
                            Id = new Guid("a6be7028-3f67-4ba4-9c7c-d01b2f24d4b5"),
                            Kind = (short)6,
                            MasterId = new Guid("4e1a8655-b359-434c-b5b1-76b59c4e98c0"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("59bbca95-7c2b-44f5-af84-10c66c2253bd"),
                            Kind = (short)5,
                            LongValue = "Employees are often the most important and yet the most easily overlooked assets of an organization. Specifically for companies in the service industries or require a great deal of creativity and an extensive knowledge pool, human resources such as customer service representatives, software engineers or scientists are pivotal.",
                            OrderValue = (short)3,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("7faf8d76-ea9d-45ba-b36f-a09083cc5aa8"),
                            Kind = (short)6,
                            MasterId = new Guid("59bbca95-7c2b-44f5-af84-10c66c2253bd"),
                            OrderValue = (short)1,
                            Value = "Know-how"
                        },
                        new
                        {
                            Id = new Guid("de1e2f94-f7c1-4377-8997-f2f66a8e7db1"),
                            Kind = (short)6,
                            MasterId = new Guid("59bbca95-7c2b-44f5-af84-10c66c2253bd"),
                            OrderValue = (short)2,
                            Value = "Office"
                        },
                        new
                        {
                            Id = new Guid("733cb9f6-a478-4842-b766-4438d5893009"),
                            Kind = (short)6,
                            MasterId = new Guid("59bbca95-7c2b-44f5-af84-10c66c2253bd"),
                            OrderValue = (short)3,
                            Value = "Factory/service"
                        },
                        new
                        {
                            Id = new Guid("6bc0e45d-8112-4387-91a2-e9967dcd1d07"),
                            Kind = (short)6,
                            MasterId = new Guid("59bbca95-7c2b-44f5-af84-10c66c2253bd"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("f6ce59df-e654-4eaf-a49d-2918e60a18a8"),
                            Kind = (short)8,
                            MasterId = new Guid("59bbca95-7c2b-44f5-af84-10c66c2253bd"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("5030932d-be75-43ba-9aef-890cbd9a673f"),
                            Kind = (short)8,
                            MasterId = new Guid("59bbca95-7c2b-44f5-af84-10c66c2253bd"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("2ed24357-d427-4ea0-81a6-82d6b951d306"),
                            Kind = (short)5,
                            LongValue = "The financial resource includes cash, lines of credit and the ability to have stock option plans for employees. All businesses have key resources in finance, but some will have stronger financial resources than other, such as banks that are based entirely on the availability of this key resource.",
                            OrderValue = (short)4,
                            Value = "Financial resources"
                        },
                        new
                        {
                            Id = new Guid("5af56cca-5109-43dd-84b7-41f334d91812"),
                            Kind = (short)6,
                            MasterId = new Guid("2ed24357-d427-4ea0-81a6-82d6b951d306"),
                            OrderValue = (short)1,
                            Value = "For start-up"
                        },
                        new
                        {
                            Id = new Guid("7cde693a-35fd-48fa-9926-4492f8d35579"),
                            Kind = (short)6,
                            MasterId = new Guid("2ed24357-d427-4ea0-81a6-82d6b951d306"),
                            OrderValue = (short)2,
                            Value = "Operational"
                        },
                        new
                        {
                            Id = new Guid("95b04cca-a309-4bf7-a3f2-4d9420b29496"),
                            Kind = (short)8,
                            MasterId = new Guid("2ed24357-d427-4ea0-81a6-82d6b951d306"),
                            OrderValue = (short)1,
                            Value = "Is available?"
                        },
                        new
                        {
                            Id = new Guid("b89c3363-3454-4043-b621-468b46a40dad"),
                            Kind = (short)5,
                            LongValue = "",
                            OrderValue = (short)5,
                            Value = "Other"
                        });
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Facebook")
                        .HasColumnType("bit");

                    b.Property<bool>("Google")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiveNotification")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorAuthEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TwoFactorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TwoFactorStringExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserPhoto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.UserFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Administrator"
                        },
                        new
                        {
                            Id = 100,
                            Title = "Simple"
                        });
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Activity", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.Industry", "Industry")
                        .WithMany("Activities")
                        .HasForeignKey("IndustryId");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.BusinessPlan", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KabadaAPI.DataSource.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("KabadaAPI.DataSource.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Plan_Attribute", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KabadaAPI.DataSource.Models.Texter", "Texter")
                        .WithMany()
                        .HasForeignKey("TexterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");

                    b.Navigation("Texter");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.RefreshToken", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.SharedPlan", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.User", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Industry", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}

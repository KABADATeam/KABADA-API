// <auto-generated />
using System;
using KabadaAPI.DataSource;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KabadaAPI.DataSource.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210611153844_AddKeyResourceData")]
    partial class AddKeyResourceData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.BusinessPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Completed")
                        .HasColumnType("int");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("Img")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsResourcesCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSwotCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("BusinessPlans");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49ccc7b4-201d-4e9d-a918-cfc4c813e0de"),
                            ShortCode = "AT",
                            Title = "Austria"
                        },
                        new
                        {
                            Id = new Guid("f255dfcb-e5a3-46c9-af6d-5c77e1a9ad3f"),
                            ShortCode = "BA",
                            Title = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = new Guid("815bbb86-ae32-4ca8-8ef2-bb27314bb08b"),
                            ShortCode = "BE",
                            Title = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("75ea60d1-8665-4051-b881-215e80458e8e"),
                            ShortCode = "BG",
                            Title = "Bulgaria"
                        },
                        new
                        {
                            Id = new Guid("aaaf8902-6bf0-4194-87ee-11efdc8db24a"),
                            ShortCode = "HR",
                            Title = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("ccdef05f-922d-4f4f-92d7-b54659ef2ca5"),
                            ShortCode = "CY",
                            Title = "Cyprus"
                        },
                        new
                        {
                            Id = new Guid("c0883e3a-31c3-4392-8c11-1091fcb68b7e"),
                            ShortCode = "CZ",
                            Title = "Czechia"
                        },
                        new
                        {
                            Id = new Guid("09fe84c7-a743-46d2-aeb9-62236e8c7a27"),
                            ShortCode = "DK",
                            Title = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("f4ad4754-1ea4-405d-a405-cbb78074979f"),
                            ShortCode = "EE",
                            Title = "Estonia"
                        },
                        new
                        {
                            Id = new Guid("8b708304-8c95-4681-9332-e7fbdc662dc8"),
                            ShortCode = "FI",
                            Title = "Finland"
                        },
                        new
                        {
                            Id = new Guid("d0918359-31f6-4291-8809-0c6b974e6eb5"),
                            ShortCode = "FR",
                            Title = "France"
                        },
                        new
                        {
                            Id = new Guid("09054696-4e38-4952-9af5-39a95988f342"),
                            ShortCode = "DE",
                            Title = "Germany"
                        },
                        new
                        {
                            Id = new Guid("a88c38e1-a59f-4f4d-a29c-1e066e07e762"),
                            ShortCode = "EL",
                            Title = "Greece"
                        },
                        new
                        {
                            Id = new Guid("f8068573-9d74-4111-931c-1d053e42242b"),
                            ShortCode = "HU",
                            Title = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("60d1142e-fdf3-4fc3-8b8c-843a26e70d02"),
                            ShortCode = "IS",
                            Title = "Iceland"
                        },
                        new
                        {
                            Id = new Guid("0fec4d2c-52ee-43ca-b53d-1204cbf30078"),
                            ShortCode = "IE",
                            Title = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("0755fd4a-c58b-4b67-81a8-574dee8451b9"),
                            ShortCode = "IT",
                            Title = "Italy"
                        },
                        new
                        {
                            Id = new Guid("e70917d6-2ae4-4342-b320-2797456be5b4"),
                            ShortCode = "LV",
                            Title = "Latvia"
                        },
                        new
                        {
                            Id = new Guid("2048acc9-f99d-44d1-8e87-680b36751944"),
                            ShortCode = "LI",
                            Title = "Liechtenstein"
                        },
                        new
                        {
                            Id = new Guid("64d83de2-1ebc-4733-8d17-fae7851a3753"),
                            ShortCode = "LT",
                            Title = "Lithuania"
                        },
                        new
                        {
                            Id = new Guid("c3897abd-4b5e-4257-afac-6db2d86c8b78"),
                            ShortCode = "LU",
                            Title = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("b456e185-f815-49d4-86fc-21304a7d489f"),
                            ShortCode = "MT",
                            Title = "Malta"
                        },
                        new
                        {
                            Id = new Guid("88684be8-6b0c-4fa1-a5de-60fb3b1482d0"),
                            ShortCode = "NL",
                            Title = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("09759d3c-7330-43d7-9024-518ac936dda9"),
                            ShortCode = "MK",
                            Title = "North Macedonia"
                        },
                        new
                        {
                            Id = new Guid("6c0284d1-ddca-4fe1-ae31-4854008097af"),
                            ShortCode = "NO",
                            Title = "Norway"
                        },
                        new
                        {
                            Id = new Guid("351e2d02-98ea-4bb6-8eae-9c25084f9b8b"),
                            ShortCode = "PL",
                            Title = "Poland"
                        },
                        new
                        {
                            Id = new Guid("60cdeeac-5359-4830-aa4d-ad8e65268e46"),
                            ShortCode = "PT",
                            Title = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("530df8be-2d66-4cd8-bd49-55dcd14fbb63"),
                            ShortCode = "RO",
                            Title = "Romania"
                        },
                        new
                        {
                            Id = new Guid("70964450-3f3f-4b50-905c-7b9aa6227945"),
                            ShortCode = "RS",
                            Title = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("fcc42236-5cbe-406c-8718-586959a01a22"),
                            ShortCode = "SK",
                            Title = "Slovakia"
                        },
                        new
                        {
                            Id = new Guid("4278aec5-91df-487a-8f2c-7402cce6ca52"),
                            ShortCode = "SI",
                            Title = "Slovenia"
                        },
                        new
                        {
                            Id = new Guid("94466ebb-380b-43d5-8d0b-df99fbb95e60"),
                            ShortCode = "ES",
                            Title = "Spain"
                        },
                        new
                        {
                            Id = new Guid("877c84f2-8e95-4f6f-b6e8-dd874a76f985"),
                            ShortCode = "SE",
                            Title = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("286d9f48-255b-4480-a7bf-6a9d2ca05779"),
                            ShortCode = "CH",
                            Title = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("55e030ad-0d9c-450d-afa4-3f7b91b4b62f"),
                            ShortCode = "TR",
                            Title = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("d5f37447-98df-41b9-b431-bb1e383bafba"),
                            ShortCode = "UK",
                            Title = "United Kingdom"
                        });
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Plan_Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TexterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.HasIndex("TexterId");

                    b.ToTable("Plan_Attributes");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.SharedPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessPlanId");

                    b.ToTable("SharedPlans");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Texter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Kind")
                        .HasColumnType("smallint");

                    b.Property<string>("LongValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("OrderValue")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Texters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e86f86dc-ff12-45e9-8a15-edd56718420c"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)1,
                            Value = "Land"
                        },
                        new
                        {
                            Id = new Guid("f07641ab-ce3a-49f6-b7bf-657ae81c4dcb"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)2,
                            Value = "Facilities and equipment"
                        },
                        new
                        {
                            Id = new Guid("fba49e93-7000-4f8a-a085-e116e928b2df"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)3,
                            Value = "Vehicles"
                        },
                        new
                        {
                            Id = new Guid("7b0459d5-da14-4a1f-acaa-660c0b617f13"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)4,
                            Value = "Inventory"
                        },
                        new
                        {
                            Id = new Guid("e67ff83c-5a8e-4cd2-8f24-9897d1759bf9"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)5,
                            Value = "Skills and experience of employees"
                        },
                        new
                        {
                            Id = new Guid("b4472904-1d16-4318-a04e-bc2bba2b97b0"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)6,
                            Value = "Corporate image"
                        },
                        new
                        {
                            Id = new Guid("16dafec0-6621-4a27-8f4e-be86883c9ceb"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)7,
                            Value = "Patents"
                        },
                        new
                        {
                            Id = new Guid("bd4e4c68-e9cf-4efe-bdc4-cf2e0a97de28"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)8,
                            Value = "Trademarks"
                        },
                        new
                        {
                            Id = new Guid("963d9d8b-69d4-42e4-a9e0-0dbc9e84279c"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)9,
                            Value = "Copyrights"
                        },
                        new
                        {
                            Id = new Guid("033c04c3-e877-4480-9bf8-6033ea5e5aad"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)10,
                            Value = "Operational processes"
                        },
                        new
                        {
                            Id = new Guid("80698396-21ca-4cf4-9377-b3c1b5627301"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)11,
                            Value = "Management processes"
                        },
                        new
                        {
                            Id = new Guid("b3b3c47d-30d5-4f2c-8098-ff5c1228f54b"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)12,
                            Value = "Supporting processes"
                        },
                        new
                        {
                            Id = new Guid("377df0bd-3ffd-4f96-ad47-f5fd3717c4f0"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)13,
                            Value = "Product design"
                        },
                        new
                        {
                            Id = new Guid("02ac9dba-f720-473f-a2aa-584d5a5af52b"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)14,
                            Value = "Product assortment"
                        },
                        new
                        {
                            Id = new Guid("e50cae66-1fdc-493c-8145-a200a8e27582"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)15,
                            Value = "Packaging and labeling"
                        },
                        new
                        {
                            Id = new Guid("44eff6de-f5cc-494f-b876-270b93fde6ad"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)16,
                            Value = "Complementary and after-sales service"
                        },
                        new
                        {
                            Id = new Guid("8c1febcc-8e2f-4a9a-9525-d9ba3d6701cb"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)17,
                            Value = "Guarantees and warranties"
                        },
                        new
                        {
                            Id = new Guid("8b5eb893-8f04-4455-ac9a-64921a66402b"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)18,
                            Value = "Return of goods"
                        },
                        new
                        {
                            Id = new Guid("b3f87bd7-3d95-4b99-9829-e717d74a4ce9"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)19,
                            Value = "Price"
                        },
                        new
                        {
                            Id = new Guid("3bbe9356-d604-43fd-8536-a7774dbd7429"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)20,
                            Value = "Discounts"
                        },
                        new
                        {
                            Id = new Guid("226bb5a9-162c-462b-a729-a9106b4220f8"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)21,
                            Value = "Payment terms"
                        },
                        new
                        {
                            Id = new Guid("a0adce95-89b1-4ea0-bfb6-68440b8e887c"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)22,
                            Value = "Customer convenient access to products"
                        },
                        new
                        {
                            Id = new Guid("5c596a21-a229-49f8-aee7-4ade8e0fbe79"),
                            Kind = (short)1,
                            LongValue = "a",
                            OrderValue = (short)23,
                            Value = "Advertising, PR and sales promotion"
                        },
                        new
                        {
                            Id = new Guid("1c03f1bd-2f7f-4f92-ad9d-1546ae90d36d"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Arrival of new technology"
                        },
                        new
                        {
                            Id = new Guid("ef55a982-a97a-43e0-ba8a-ee9a9c169135"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New regulations"
                        },
                        new
                        {
                            Id = new Guid("4f8c447f-eb2f-49a6-be25-eaa78e8bad8d"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Unfulfilled customer need"
                        },
                        new
                        {
                            Id = new Guid("951c6a64-f6ab-4c67-bfd9-d589521fdc26"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Taking business courses (training)"
                        },
                        new
                        {
                            Id = new Guid("7b39fe02-5bae-425d-a40a-204a66003989"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "Trend changes"
                        },
                        new
                        {
                            Id = new Guid("9a98dbda-6100-4279-a66d-699b6c9a7152"),
                            Kind = (short)3,
                            LongValue = "a",
                            OrderValue = (short)0,
                            Value = "New substitute products"
                        },
                        new
                        {
                            Id = new Guid("348e4a8b-28de-4551-a8fd-623f8066e541"),
                            Kind = (short)5,
                            LongValue = "Physical assets are tangible resources that a company uses to create its value proposition. These could include equipment, inventory, buildings, manufacturing plants and distribution networks that enable the business to function.",
                            OrderValue = (short)1,
                            Value = "Physical resources"
                        },
                        new
                        {
                            Id = new Guid("6e868d67-aee7-466e-a24d-b872f1e0e193"),
                            Kind = (short)6,
                            MasterId = new Guid("348e4a8b-28de-4551-a8fd-623f8066e541"),
                            OrderValue = (short)1,
                            Value = "Buildings"
                        },
                        new
                        {
                            Id = new Guid("3e9cf780-5efa-401c-b38d-d026b42e15e4"),
                            Kind = (short)7,
                            MasterId = new Guid("6e868d67-aee7-466e-a24d-b872f1e0e193"),
                            OrderValue = (short)1,
                            Value = "Office"
                        },
                        new
                        {
                            Id = new Guid("0fb46e28-f30c-4724-bb45-7643a314e194"),
                            Kind = (short)7,
                            MasterId = new Guid("6e868d67-aee7-466e-a24d-b872f1e0e193"),
                            OrderValue = (short)2,
                            Value = "Manufacturing Buildings"
                        },
                        new
                        {
                            Id = new Guid("29696f3e-51a1-4b3d-b54f-cf1d82bd4873"),
                            Kind = (short)7,
                            MasterId = new Guid("6e868d67-aee7-466e-a24d-b872f1e0e193"),
                            OrderValue = (short)3,
                            Value = "Inventory Buildings"
                        },
                        new
                        {
                            Id = new Guid("320d614c-f4e5-4f79-bb6b-30cc8c51a980"),
                            Kind = (short)7,
                            MasterId = new Guid("6e868d67-aee7-466e-a24d-b872f1e0e193"),
                            OrderValue = (short)4,
                            Value = "Sales Buildings (Shop)"
                        },
                        new
                        {
                            Id = new Guid("16ae8a4d-df5b-45ee-9ed3-755418aa3933"),
                            Kind = (short)7,
                            MasterId = new Guid("6e868d67-aee7-466e-a24d-b872f1e0e193"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("25640309-a74d-4e63-84f3-5e4513fd0e94"),
                            Kind = (short)6,
                            MasterId = new Guid("348e4a8b-28de-4551-a8fd-623f8066e541"),
                            OrderValue = (short)2,
                            Value = "Production machinery"
                        },
                        new
                        {
                            Id = new Guid("6b8ff771-01c2-4ada-9c3e-8217b194e64d"),
                            Kind = (short)6,
                            MasterId = new Guid("348e4a8b-28de-4551-a8fd-623f8066e541"),
                            OrderValue = (short)3,
                            Value = "Transport"
                        },
                        new
                        {
                            Id = new Guid("c38d485b-142c-4018-91b7-c147dac95747"),
                            Kind = (short)6,
                            MasterId = new Guid("348e4a8b-28de-4551-a8fd-623f8066e541"),
                            OrderValue = (short)4,
                            Value = "Resources"
                        },
                        new
                        {
                            Id = new Guid("e9f612bf-c4b2-4797-8194-658293979f9a"),
                            Kind = (short)6,
                            MasterId = new Guid("348e4a8b-28de-4551-a8fd-623f8066e541"),
                            OrderValue = (short)5,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("dbbb8478-4137-409a-bac9-08d61db1c7c4"),
                            Kind = (short)8,
                            MasterId = new Guid("348e4a8b-28de-4551-a8fd-623f8066e541"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("d31b0be3-3b7f-4fe5-9909-b1b693030ec5"),
                            Kind = (short)8,
                            MasterId = new Guid("348e4a8b-28de-4551-a8fd-623f8066e541"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("753c13b5-c3da-4a99-a629-e9bde4679d1c"),
                            Kind = (short)5,
                            LongValue = "These are non-physical, intangible resources like brand, patents, IP, copyrights, and even partnerships. Customer lists, customer knowledge, and even your own people, represent a form of intellectual resource. Intellectual resources take a great deal of time and expenditure to develop. But once developed, they can offer unique advantages to the company.",
                            OrderValue = (short)2,
                            Value = "Intellectual resources"
                        },
                        new
                        {
                            Id = new Guid("8f103a7f-3ed7-436d-9d50-ca17a570028b"),
                            Kind = (short)6,
                            MasterId = new Guid("753c13b5-c3da-4a99-a629-e9bde4679d1c"),
                            OrderValue = (short)1,
                            Value = "Brands"
                        },
                        new
                        {
                            Id = new Guid("652ed896-1260-4e4e-aa0c-bee254da9702"),
                            Kind = (short)6,
                            MasterId = new Guid("753c13b5-c3da-4a99-a629-e9bde4679d1c"),
                            OrderValue = (short)2,
                            Value = "Licenses"
                        },
                        new
                        {
                            Id = new Guid("4068270b-ce96-41e4-9781-faba4660620f"),
                            Kind = (short)6,
                            MasterId = new Guid("753c13b5-c3da-4a99-a629-e9bde4679d1c"),
                            OrderValue = (short)3,
                            Value = "Software"
                        },
                        new
                        {
                            Id = new Guid("6db879dd-2b11-42ba-a42a-2e512ad50384"),
                            Kind = (short)6,
                            MasterId = new Guid("753c13b5-c3da-4a99-a629-e9bde4679d1c"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("69d2a5cc-1b59-452c-813d-2f23e2c0fe4d"),
                            Kind = (short)5,
                            LongValue = "Employees are often the most important and yet the most easily overlooked assets of an organization. Specifically for companies in the service industries or require a great deal of creativity and an extensive knowledge pool, human resources such as customer service representatives, software engineers or scientists are pivotal.",
                            OrderValue = (short)3,
                            Value = "Human resources"
                        },
                        new
                        {
                            Id = new Guid("3252f60a-780f-4aab-95ee-88f9be3f8c63"),
                            Kind = (short)6,
                            MasterId = new Guid("69d2a5cc-1b59-452c-813d-2f23e2c0fe4d"),
                            OrderValue = (short)1,
                            Value = "Know-how"
                        },
                        new
                        {
                            Id = new Guid("5332875d-9ec3-4072-aedf-6923328f6edd"),
                            Kind = (short)6,
                            MasterId = new Guid("69d2a5cc-1b59-452c-813d-2f23e2c0fe4d"),
                            OrderValue = (short)2,
                            Value = "Office"
                        },
                        new
                        {
                            Id = new Guid("07c88c37-e3e3-41f7-a7c7-c55aae9828b6"),
                            Kind = (short)6,
                            MasterId = new Guid("69d2a5cc-1b59-452c-813d-2f23e2c0fe4d"),
                            OrderValue = (short)3,
                            Value = "Factory/service"
                        },
                        new
                        {
                            Id = new Guid("624c37ad-99fd-4297-a791-1c4fbf89b052"),
                            Kind = (short)6,
                            MasterId = new Guid("69d2a5cc-1b59-452c-813d-2f23e2c0fe4d"),
                            OrderValue = (short)4,
                            Value = "Other"
                        },
                        new
                        {
                            Id = new Guid("0927dded-a505-4ba0-a6c3-0a3b428d8363"),
                            Kind = (short)8,
                            MasterId = new Guid("69d2a5cc-1b59-452c-813d-2f23e2c0fe4d"),
                            OrderValue = (short)1,
                            Value = "Ownership type"
                        },
                        new
                        {
                            Id = new Guid("002434c2-00e2-42d3-8491-7db1c458c3b0"),
                            Kind = (short)8,
                            MasterId = new Guid("69d2a5cc-1b59-452c-813d-2f23e2c0fe4d"),
                            OrderValue = (short)2,
                            Value = "Frequency"
                        },
                        new
                        {
                            Id = new Guid("5f8fb98d-a256-4c09-ab7d-c580eeb8ef1f"),
                            Kind = (short)5,
                            LongValue = "The financial resource includes cash, lines of credit and the ability to have stock option plans for employees. All businesses have key resources in finance, but some will have stronger financial resources than other, such as banks that are based entirely on the availability of this key resource.",
                            OrderValue = (short)4,
                            Value = "Financial resources"
                        },
                        new
                        {
                            Id = new Guid("3f78cd37-0c19-4155-bcae-8fa62b54f970"),
                            Kind = (short)6,
                            MasterId = new Guid("5f8fb98d-a256-4c09-ab7d-c580eeb8ef1f"),
                            OrderValue = (short)1,
                            Value = "For start-up"
                        },
                        new
                        {
                            Id = new Guid("ca1f730e-0ef1-4d81-8101-b13fe20129b8"),
                            Kind = (short)6,
                            MasterId = new Guid("5f8fb98d-a256-4c09-ab7d-c580eeb8ef1f"),
                            OrderValue = (short)2,
                            Value = "Operational"
                        },
                        new
                        {
                            Id = new Guid("2030f3f4-ee3e-4eea-b20b-e84b86afd7b1"),
                            Kind = (short)8,
                            MasterId = new Guid("5f8fb98d-a256-4c09-ab7d-c580eeb8ef1f"),
                            OrderValue = (short)1,
                            Value = "Is available?"
                        },
                        new
                        {
                            Id = new Guid("63d84e44-68bb-4657-959c-b7ea95522eee"),
                            Kind = (short)5,
                            LongValue = "",
                            OrderValue = (short)5,
                            Value = "Other"
                        });
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Facebook")
                        .HasColumnType("bit");

                    b.Property<bool>("Google")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiveNotification")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorAuthEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TwoFactorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TwoFactorStringExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserPhoto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.UserFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Administrator"
                        },
                        new
                        {
                            Id = 100,
                            Title = "Simple"
                        });
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Activity", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.Industry", "Industry")
                        .WithMany("Activities")
                        .HasForeignKey("IndustryId");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.BusinessPlan", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KabadaAPI.DataSource.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("KabadaAPI.DataSource.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Plan_Attribute", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KabadaAPI.DataSource.Models.Texter", "Texter")
                        .WithMany()
                        .HasForeignKey("TexterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");

                    b.Navigation("Texter");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.RefreshToken", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.SharedPlan", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.BusinessPlan", "BusinessPlan")
                        .WithMany()
                        .HasForeignKey("BusinessPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPlan");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.User", b =>
                {
                    b.HasOne("KabadaAPI.DataSource.Models.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("KabadaAPI.DataSource.Models.Industry", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
